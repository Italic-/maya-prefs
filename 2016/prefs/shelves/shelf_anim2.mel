global proc shelf_anim2 () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "PSR" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "PSR" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "PSR" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//Lee archivo en directorio interno con el nombre del ultimo personaje usado.\nstring $script_int_dir = `internalVar -userScriptDir`;                   //Declara la ruta interna del usuario para los scripts.\nstring $file_char = ($script_int_dir + \"character_pose.rig\");            //Declara como se llama el archivo que nos interesa.\n$file_char_exist = `filetest -w $file_char`;                             //Nos dice si el archivo que buscamos existe.\nif ($file_char_exist == 0) $file_char_Id = `fopen $file_char \"w\"`;       //Si el archivo NO existe lo crea, vacio.\nif ($file_char_exist == 1) $file_char_Id = `fopen $file_char \"r\"`;       //Si el archivo SI existe lo pone en modo lectura.\nstring $pose_char = `fread $file_char_Id $pose_char`;                    //Declara el nombre del personaje que esta dentro del archivo.\nfclose $file_char_Id;\n\n//Lee archivo en el proyecto con los tabs creados.\nsysFile -makeDir ((`workspace -q -rd`) + \"scripts/pose\");                //Crea la carpeta para el contenido del script.\nstring $script_proy_dir = ((`workspace -q -rd`) + \"scripts/pose/\");      //Declara la ruta en el proyecto para el script de poses.\nstring $file_tabs = ($script_proy_dir + \"tabs.script\");                  //Declara como se llama el archivo que nos interesa.\n$file_tabs_exist = `filetest -w $file_tabs`;                             //Nos dice si el archivo que buscamos existe.\nif ($file_tabs_exist == 0) $file_tabs_Id = `fopen $file_tabs \"w\"`;       //Si el archivo NO existe lo crea, vacio.\nif ($file_tabs_exist == 1) $file_tabs_Id = `fopen $file_tabs \"r\"`;       //Si el archivo SI existe lo pone en modo lectura.\nstring $file_tabs_save = `fread $file_tabs_Id $file_tabs_save`;          //Lee y guarda l ainformaci?n del archivo.\nstring $tabs_list[] = stringToStringArray($file_tabs_save,\",\");          //Crea un array con los elementos del archivo.\n$tabs_size = `size($tabs_list)`;                                         //Declara la cantidad de elementos leidos.\nfclose $file_tabs_Id ;\n\nglobal proc c_create_tab()\n{\n    window -w 300 -h 100 -tb false -menuBar false -s false create_tab_w;\n    formLayout create_tab_FL;\n    text -l \"Name of Tab:\" tab_name_text;\n    textField -w 140 -h 25 tab_name_F;\n    button -w 100 -h 30 -l \"Create\" -c \"string $new_tab = `textField -q -tx tab_name_F`;c_acept_create_tab($new_tab);c_refresh_tabs;c_refresh_delete_tab;c_refresh_delete_menu;\" create_tab_b;\n    button -w 100 -h 30 -l \"Cancel\" -c \"deleteUI create_tab_w\" cancel_tab_b;\n    \n    formLayout -edit\n\t    -attachForm tab_name_text \"top\" 22\n\t    -attachForm tab_name_text \"left\" 30\n\t    -attachForm tab_name_F \"top\" 15\n\t    -attachForm tab_name_F \"left\" 120\n\t    -attachForm create_tab_b \"top\" 60\n\t    -attachForm create_tab_b \"left\" 35\n\t    -attachForm cancel_tab_b \"top\" 60\n\t    -attachForm cancel_tab_b \"left\" 160\n    create_tab_FL;\n    showWindow create_tab_w; \n}\n\n\nglobal proc c_acept_create_tab(string $new_tab)\n{\n    string $script_proy_dir = ((`workspace -q -rd`) + \"scripts/pose/\");      //Declara la ruta en el proyecto para el script de poses.\n    string $file_tabs = ($script_proy_dir + \"tabs.script\");                  //Declara donde esta el archivo que deseamos usar.\n    $file_tabs_exist = `filetest -w $file_tabs`;                             //Nos dice si el archivo que buscamos existe.\n    $file_tabs_Id = `fopen $file_tabs \"r\"`;                                  //Si el archivo SI existe lo pone en modo lectura.\n    string $tabs_read= `fread $file_tabs_Id $tabs_read`;                     //Guardamos en una variable el contenido del archivo.\n    string $tabs_array[] = stringToStringArray($tabs_read,\",\");              //Separamos el contenido en un array.\n    $tabs_size = `size($tabs_array)`;                                        //Calculamos cuantos tabs habia en el archivo.\n    $tabs_array[$tabs_size] = $new_tab;                                      //A?adimos al array el nuevo tab.\n    $tabs_save = stringArrayToString($tabs_array,\",\");                       //Pasamos a una variable el array.\n    $file_tabs_Id = `fopen $file_tabs \"w\"`;                                  //Abrimos el archivo en modo escritura para guardar la informaci?n.\n    fprint $file_tabs_Id $tabs_save;                                         //Escribimos en el archivo la variable con la infromaci?n.\n    fclose $file_tabs_Id;                                                    //Cerramos el archivo con el que hemos trabajado.\n    sysFile -makeDir ((`workspace -q -rd`) + \"scripts/pose/\" + $new_tab);    //Creamos la carpeta que contendr? las poses de este tab.\n    deleteUI create_tab_w;                                                   //Elimina la ventana.\n    \n    scrollLayout -p tabs_L $new_tab;\n    tabLayout -edit -tabLabel $new_tab $new_tab tabs_L;\n}\n\n//Reiniciar ventana al abrir\nstring $poses_w = \"poses_w\";\nstring $poses_dock = \"poses_dock\";\nif (`window -exists $poses_w`) deleteUI $poses_w;\nif (`windowPref -q -exists $poses_w`) windowPref -e -w 408 -h 650 $poses_w;\n\n//Crea la ventana\nwindow -w 408 -h 650 -menuBar true -s true -rtf false -t \"Poses Manager by Antonio M?ndez Lora\" $poses_w;\nformLayout base_FL;\nmenu -label \"Tabs\" -tearOff off tab_menu;\nmenuItem -label \"Create New Tab\" -c \"c_create_tab\" -p tab_menu create_tab_menu;\nc_refresh_delete_tab;\nmenu -label \"Poses\" -tearOff off poses_menu;\nmenuItem -label \"Create New Pose\" -c \"c_create_pose;\" -p poses_menu create_pose_menu;\nc_refresh_delete_menu;\nmenuItem -label \"Tab Order\" -c \"c_tab_order\" -p tab_menu tab_order_menu;\nmenuItem -label \"Poses Order\" -c \"c_poses_order\" -p poses_menu poses_order_menu;\n\nglobal proc c_poses_order()\n{\n    if (`window -exists poses_order_w`) deleteUI poses_order_w;\n    window -w 250 -h 350 -tb false -menuBar false -s false poses_order_w;\n    formLayout poses_order_FL;\n    \n    text -l \"Tabs:\" tabs_menu_text;\n    optionMenu -w 140 -cc \"c_order_poses_list_act;\" tab_name_menu;\n    \n    string $script_proy_dir = ((`workspace -q -rd`) + \"scripts/pose/\");      //Declara la ruta en el proyecto para el script de poses.\n    string $file_tabs = ($script_proy_dir + \"tabs.script\");                  //Declara como se llama el archivo que nos interesa.\n    $file_tabs_exist = `filetest -w $file_tabs`;                             //Nos dice si el archivo que buscamos existe.\n    if ($file_tabs_exist == 0) $file_tabs_Id = `fopen $file_tabs \"w\"`;       //Si el archivo NO existe lo crea, vacio.\n    if ($file_tabs_exist == 1) $file_tabs_Id = `fopen $file_tabs \"r\"`;       //Si el archivo SI existe lo pone en modo lectura.\n    string $file_tabs_save = `fread $file_tabs_Id $file_tabs_save`;          //Lee y guarda l ainformaci?n del archivo.\n    string $tabs_list[] = stringToStringArray($file_tabs_save,\",\");          //Crea un array con los elementos del archivo.\n    $tabs_size = `size($tabs_list)`;                                         //Declara la cantidad de elementos leidos.\n    fclose $file_tabs_Id;\n    \n    for($cont=0;$cont<$tabs_size;$cont++){\n        menuItem -label $tabs_list[$cont] -p tab_name_menu;\n    }\n    \n    textScrollList -w 150 -h 195 poses_list_menu;\n    iconTextButton -w 20 -image arrowUp.png -c \"c_poses_order_up\" poses_list_up_b;\n    iconTextButton -w 20 -image arrowDown.png -c \"c_poses_order_dw\" poses_list_dw_b;\n    \n    formLayout -edit \n        -attachForm tabs_menu_text \"top\" 15 \n        -attachForm tabs_menu_text \"left\" 50 \n        -attachForm tab_name_menu \"top\" 35\n        -attachForm tab_name_menu \"left\" 50\n        -attachForm poses_list_menu \"top\" 70\n        -attachForm poses_list_menu \"left\" 50\n        -attachForm poses_list_up_b \"top\" 130\n        -attachForm poses_list_up_b \"left\" 210\n        -attachForm poses_list_dw_b \"top\" 170\n        -attachForm poses_list_dw_b \"left\" 210\n        \n    poses_order_FL;\n    \n    c_order_poses_list_act;\n    \n    button -w 90 -h 30 -l \"Save\" -c \"c_poses_order_accept;deleteUI poses_order_w;\" save_order_poses_b;\n    formLayout -edit -attachForm save_order_poses_b \"top\" 290 -attachForm save_order_poses_b \"left\" 20 poses_order_FL;\n    button -w 90 -h 30 -l \"Cancel\" -c \"deleteUI poses_order_w;\" cancel_order_poses_b;\n    formLayout -edit -attachForm cancel_order_poses_b \"top\" 290 -attachForm cancel_order_poses_b \"left\" 140 poses_order_FL;\n    \n    showWindow poses_order_w;\n}\n\nglobal proc c_poses_order_accept()\n{\n    string $new_order_poses_list[] = `textScrollList -q -ai poses_list_menu`;\n    string $tab_selected = `optionMenu -q -v tab_name_menu`;\n    \n    string $act_poses_dir = ((`workspace -q -rd`) + \"scripts/pose/\" + $tab_selected + \"/\");\n                  \n    $save_info = stringArrayToString($new_order_poses_list,\",\");                                   //Declaramos una variable donde ponemos todas las poses separadas por una ,\n        \n    string $fileBodyPoseDir = ($act_poses_dir + \"poses.script\");                             //Declaramos en una variable la direccion del archivo.\n    $fileBodyPoseId = `fopen $fileBodyPoseDir \"w\"` ;                                          //Abrimos el archivo en modo escritura. \n    fprint $fileBodyPoseId $save_info ;                                                       //Guardamos la variable con las poses en el archivo.      \n    fclose $fileBodyPoseId;\n    \n    c_refresh_tabs; \n    c_refresh_delete_tab;\n    c_refresh_delete_menu;\n    \n}\n\nglobal proc c_order_poses_list_act()\n{\n    $tab_select = `optionMenu -q -v tab_name_menu`;\n    textScrollList -edit -ra poses_list_menu;\n    \n    string $act_pose_dir = ((`workspace -q -rd`) + \"scripts/pose/\" + $tab_select + \"/\");\n    string $dir_file_poses = ($act_pose_dir + \"poses.script\");\n    $file_poses_exist = `filetest -w $dir_file_poses`;\n    if ($file_poses_exist == 0) $file_poses_Id = `fopen $dir_file_poses \"w\"`;\n    if ($file_poses_exist == 1) $file_poses_Id = `fopen $dir_file_poses \"r\"`;\n    string $poses_var = `fread $file_poses_Id $poses_var`;\n    fclose $file_poses_Id;\n    string $poses_list[] = stringToStringArray($poses_var,\",\");\n    $poses_size = `size($poses_list)`;\n    \n    for($cont=0;$cont<$poses_size;$cont++)\n    {\n        string $file_pose_r = ($act_pose_dir + $poses_list[$cont] + \".pose\");\n        float $file_exists = `filetest -r  $file_pose_r`;\n        if($file_exists == 1){\n        textScrollList -edit -append $poses_list[$cont] poses_list_menu;\n        }\n    }\n}\n\nglobal proc c_poses_order_up()\n{\n    string $name_pose_selected[] = `textScrollList -q -si poses_list_menu`;\n    int $position_pose_selected[] = `textScrollList -q -sii poses_list_menu`;\n    if ($position_pose_selected[0] == 1) {}\n    else{\n    textScrollList -edit -rii $position_pose_selected[0] poses_list_menu;\n    textScrollList -edit -ap ($position_pose_selected[0] - 1) $name_pose_selected[0] poses_list_menu;\n    textScrollList -edit -sii ($position_pose_selected[0] - 1) poses_list_menu;}\n}\n\nglobal proc c_poses_order_dw()\n{\n    string $name_pose_selected[] = `textScrollList -q -si poses_list_menu`;\n    int $position_pose_selected[] = `textScrollList -q -sii poses_list_menu`;\n    int $total_items = `textScrollList -q -ni poses_list_menu`;\n    if ($position_pose_selected[0] == $total_items) {}\n    else{\n    textScrollList -edit -rii $position_pose_selected[0] poses_list_menu;\n    textScrollList -edit -ap ($position_pose_selected[0] + 1) $name_pose_selected[0] poses_list_menu;\n    textScrollList -edit -sii ($position_pose_selected[0] + 1) poses_list_menu;}\n}\n\n\nglobal proc c_tab_order()\n{\n    if (`window -exists tab_order_w`) deleteUI tab_order_w;\n    window -w 250 -h 300 -tb false -menuBar false -s false tab_order_w;\n    formLayout tab_order_FL;\n    \n    text -l \"Tabs:\" tabs_list_text;\n    textScrollList -w 150 -h 195 tabs_list_menu;\n    iconTextButton -w 20 -image arrowUp.png -c \"c_tab_order_up\" tabs_list_up_b;\n    iconTextButton -w 20 -image arrowDown.png -c \"c_tab_order_dw\" tabs_list_dw_b;\n    formLayout -edit \n        -attachForm tabs_list_text \"top\" 15 \n        -attachForm tabs_list_text \"left\" 50 \n        -attachForm tabs_list_menu \"top\" 35\n        -attachForm tabs_list_menu \"left\" 50\n        -attachForm tabs_list_up_b \"top\" 100\n        -attachForm tabs_list_up_b \"left\" 210\n        -attachForm tabs_list_dw_b \"top\" 140\n        -attachForm tabs_list_dw_b \"left\" 210\n    tab_order_FL;\n    \n    string $script_proy_dir = ((`workspace -q -rd`) + \"scripts/pose/\");      //Declara la ruta en el proyecto para el script de poses.\n    string $file_tabs = ($script_proy_dir + \"tabs.script\");                  //Declara como se llama el archivo que nos interesa.\n    $file_tabs_exist = `filetest -w $file_tabs`;                             //Nos dice si el archivo que buscamos existe.\n    if ($file_tabs_exist == 0) $file_tabs_Id = `fopen $file_tabs \"w\"`;       //Si el archivo NO existe lo crea, vacio.\n    if ($file_tabs_exist == 1) $file_tabs_Id = `fopen $file_tabs \"r\"`;       //Si el archivo SI existe lo pone en modo lectura.\n    string $file_tabs_save = `fread $file_tabs_Id $file_tabs_save`;          //Lee y guarda l ainformaci?n del archivo.\n    string $tabs_list[] = stringToStringArray($file_tabs_save,\",\");          //Crea un array con los elementos del archivo.\n    $tabs_size = `size($tabs_list)`;                                         //Declara la cantidad de elementos leidos.\n    fclose $file_tabs_Id;\n    \n    for($cont=0;$cont<$tabs_size;$cont++)\n    {\n        textScrollList -edit -append $tabs_list[$cont] tabs_list_menu;\n    }\n    \n    button -w 90 -h 30 -l \"Save\" -c \"c_tab_order_accept;deleteUI tab_order_w;\" save_order_tabs_b;\n    formLayout -edit -attachForm save_order_tabs_b \"top\" 250 -attachForm save_order_tabs_b \"left\" 20 tab_order_FL;\n    button -w 90 -h 30 -l \"Cancel\" -c \"deleteUI tab_order_w;\" cancel_order_tabs_b;\n    formLayout -edit -attachForm cancel_order_tabs_b \"top\" 250 -attachForm cancel_order_tabs_b \"left\" 140 tab_order_FL;\n    showWindow tab_order_w;\n}\n\nglobal proc c_tab_order_accept()\n{\n    string $new_order_tab_list[] = `textScrollList -q -ai tabs_list_menu`;\n    \n    string $act_tabs_dir = ((`workspace -q -rd`) + \"scripts/pose/\");\n                  \n    $save_info = stringArrayToString($new_order_tab_list,\",\");                                   //Declaramos una variable donde ponemos todas las poses separadas por una ,\n        \n    string $fileBodyPoseDir = ($act_tabs_dir + \"tabs.script\");                             //Declaramos en una variable la direccion del archivo.\n    $fileBodyPoseId = `fopen $fileBodyPoseDir \"w\"` ;                                          //Abrimos el archivo en modo escritura. \n    fprint $fileBodyPoseId $save_info ;                                                       //Guardamos la variable con las poses en el archivo.      \n    fclose $fileBodyPoseId;\n    \n    c_refresh_tabs; \n    c_refresh_delete_tab;\n    c_refresh_delete_menu;\n    \n}\n\nglobal proc c_tab_order_up()\n{\n    string $name_tab_selected[] = `textScrollList -q -si tabs_list_menu`;\n    int $position_tab_selected[] = `textScrollList -q -sii tabs_list_menu`;\n    if ($position_tab_selected[0] == 1) {}\n    else{\n    textScrollList -edit -rii $position_tab_selected[0] tabs_list_menu;\n    textScrollList -edit -ap ($position_tab_selected[0] - 1) $name_tab_selected[0] tabs_list_menu;\n    textScrollList -edit -sii ($position_tab_selected[0] - 1) tabs_list_menu;}\n}\n\nglobal proc c_tab_order_dw()\n{\n    string $name_tab_selected[] = `textScrollList -q -si tabs_list_menu`;\n    int $position_tab_selected[] = `textScrollList -q -sii tabs_list_menu`;\n    int $total_items = `textScrollList -q -ni tabs_list_menu`;\n    if ($position_tab_selected[0] == $total_items) {}\n    else{\n    textScrollList -edit -rii $position_tab_selected[0] tabs_list_menu;\n    textScrollList -edit -ap ($position_tab_selected[0] + 1) $name_tab_selected[0] tabs_list_menu;\n    textScrollList -edit -sii ($position_tab_selected[0] + 1) tabs_list_menu;}\n}\n\nglobal proc c_refresh_delete_tab()\n{\n    if(`menuItem -exists delete_tab_menu`) deleteUI delete_tab_menu;\n    menuItem -label \"Delete Tab:\" -subMenu true -p tab_menu delete_tab_menu;\n    \n    sysFile -makeDir ((`workspace -q -rd`) + \"scripts/pose\");                //Crea la carpeta para el contenido del script.\n    string $script_proy_dir = ((`workspace -q -rd`) + \"scripts/pose/\");      //Declara la ruta en el proyecto para el script de poses.\n    string $file_tabs = ($script_proy_dir + \"tabs.script\");                  //Declara como se llama el archivo que nos interesa.\n    $file_tabs_exist = `filetest -w $file_tabs`;                             //Nos dice si el archivo que buscamos existe.\n    if ($file_tabs_exist == 0) $file_tabs_Id = `fopen $file_tabs \"w\"`;       //Si el archivo NO existe lo crea, vacio.\n    if ($file_tabs_exist == 1) $file_tabs_Id = `fopen $file_tabs \"r\"`;       //Si el archivo SI existe lo pone en modo lectura.\n    string $file_tabs_save = `fread $file_tabs_Id $file_tabs_save`;          //Lee y guarda l ainformaci?n del archivo.\n    fclose $file_tabs_Id;\n    string $tabs_list[] = stringToStringArray($file_tabs_save,\",\");          //Crea un array con los elementos del archivo.\n    $tabs_size = `size($tabs_list)`;\n    \n    for($cont=0;$cont<$tabs_size;$cont++)\n    {\n        menuItem -label $tabs_list[$cont] -c (\"c_delete_tab_menu \" + $tabs_list[$cont]) -p delete_tab_menu ($tabs_list[$cont] + \"_tab_menu\");\n    }\n}\n\nglobal proc c_delete_tab_menu(string $delete_tab)\n{\n    string $act_tabs_dir = ((`workspace -q -rd`) + \"scripts/pose/\");\n    string $dir_file_tabs = ($act_tabs_dir + \"tabs.script\");\n    $file_tabs_exist = `filetest -w $dir_file_tabs`;\n    if ($file_tabs_exist == 0) $file_tabs_Id = `fopen $dir_file_tabs \"w\"`;\n    if ($file_tabs_exist == 1) $file_tabs_Id = `fopen $dir_file_tabs \"r\"`;\n    string $tabs_var = `fread $file_tabs_Id $tabs_var`;\n    fclose $file_tabs_Id;\n    \n    string $tabs_list[] = stringToStringArray($tabs_var,\",\");\n    string $tabs_delete_array[];\n    $tabs_delete_array[0] = $delete_tab;\n    string $new_tabs_list[] = stringArrayRemove($tabs_delete_array,$tabs_list);              \n    $save_info = stringArrayToString($new_tabs_list,\",\");                                   //Declaramos una variable donde ponemos todas las poses separadas por una ,\n        \n    string $fileBodyPoseDir = ($act_tabs_dir + \"tabs.script\");                             //Declaramos en una variable la direccion del archivo.\n    $fileBodyPoseId = `fopen $fileBodyPoseDir \"w\"` ;                                          //Abrimos el archivo en modo escritura. \n    fprint $fileBodyPoseId $save_info ;                                                       //Guardamos la variable con las poses en el archivo.      \n    fclose $fileBodyPoseId;\n    \n    c_refresh_tabs; \n    c_refresh_delete_tab;\n    c_refresh_delete_menu;\n}\n\nglobal proc c_refresh_delete_menu()\n{\n    if(`menuItem -exists delete_pose_menu`) deleteUI delete_pose_menu;\n    menuItem -label \"Delete Pose:\" -subMenu true -p poses_menu delete_pose_menu;\n    \n    sysFile -makeDir ((`workspace -q -rd`) + \"scripts/pose\");                //Crea la carpeta para el contenido del script.\n    string $script_proy_dir = ((`workspace -q -rd`) + \"scripts/pose/\");      //Declara la ruta en el proyecto para el script de poses.\n    string $file_tabs = ($script_proy_dir + \"tabs.script\");                  //Declara como se llama el archivo que nos interesa.\n    $file_tabs_exist = `filetest -w $file_tabs`;                             //Nos dice si el archivo que buscamos existe.\n    if ($file_tabs_exist == 0) $file_tabs_Id = `fopen $file_tabs \"w\"`;       //Si el archivo NO existe lo crea, vacio.\n    if ($file_tabs_exist == 1) $file_tabs_Id = `fopen $file_tabs \"r\"`;       //Si el archivo SI existe lo pone en modo lectura.\n    string $file_tabs_save = `fread $file_tabs_Id $file_tabs_save`;          //Lee y guarda l ainformaci?n del archivo.\n    fclose $file_tabs_Id;\n    string $tabs_list[] = stringToStringArray($file_tabs_save,\",\");          //Crea un array con los elementos del archivo.\n    $tabs_size = `size($tabs_list)`;\n    \n    \n    for($cont=0;$cont<$tabs_size;$cont++)\n    {\n        menuItem -label $tabs_list[$cont] -subMenu true -p delete_pose_menu ($tabs_list[$cont] + \"_menu\");\n    \n        string $act_pose_dir = ((`workspace -q -rd`) + \"scripts/pose/\" + $tabs_list[$cont] + \"/\");\n        string $file_poses = ($act_pose_dir + \"poses.script\");\n        $file_poses_exist = `filetest -w $file_poses`;\n        if ($file_poses_exist == 0) $file_poses_Id = `fopen $file_poses \"w\"`;\n        if ($file_poses_exist == 1) $file_poses_Id = `fopen $file_poses \"r\"`;\n        string $poses_vari = `fread $file_poses_Id $poses_vari`;\n        fclose $file_poses_Id;\n        \n        string $poses_list[] = stringToStringArray($poses_vari,\",\");\n        $poses_list_size = `size($poses_list)`;\n        \n    \n        for($count=0;$count<$poses_list_size;$count++)\n        {\n            string $file_pose_r = ((`workspace -q -rd`) + \"scripts/pose/\" +  $tabs_list[$cont] + \"/\" + $poses_list[$count] + \".pose\");\n\t        float $file_exists = `filetest -r $file_pose_r`;\n            if($file_exists == 1){\n            //Creaci?n del bot?n.\n            menuItem -label $poses_list[$count] -c (\"c_delete_pose_button \" + $tabs_list[$cont] + \" \" + $poses_list[$count]) -p ($tabs_list[$cont] + \"_menu\") ($poses_list[$count] + \"_pose_menu\");\n        }\n        } \n    }\n}\n\nglobal proc c_delete_pose_button(string $pose_tab,string $pose_delete)\n{\n    string $act_pose_dir = ((`workspace -q -rd`) + \"scripts/pose/\" + $pose_tab + \"/\");\n    string $dir_file_poses = ($act_pose_dir + \"poses.script\");\n    $file_poses_exist = `filetest -w $dir_file_poses`;\n    if ($file_poses_exist == 0) $file_poses_Id = `fopen $dir_file_poses \"w\"`;\n    if ($file_poses_exist == 1) $file_poses_Id = `fopen $dir_file_poses \"r\"`;\n    string $poses_var = `fread $file_poses_Id $poses_var`;\n    fclose $file_poses_Id;\n    \n    string $poses_list[] = stringToStringArray($poses_var,\",\");\n    string $pose_delete_array[];\n    $pose_delete_array[0] = $pose_delete;\n    string $new_poses_list[] = stringArrayRemove($pose_delete_array,$poses_list);              \n    $save_info = stringArrayToString($new_poses_list,\",\");                                   //Declaramos una variable donde ponemos todas las poses separadas por una ,\n        \n    string $fileBodyPoseDir = ($act_pose_dir + \"poses.script\");                             //Declaramos en una variable la direccion del archivo.\n    $fileBodyPoseId = `fopen $fileBodyPoseDir \"w\"` ;                                          //Abrimos el archivo en modo escritura. \n    fprint $fileBodyPoseId $save_info ;                                                       //Guardamos la variable con las poses en el archivo.      \n    fclose $fileBodyPoseId;\n\n    //Borrar los archivos\n    sysFile -delete ($act_pose_dir + $pose_delete + \".pose\");\n    sysFile -delete ($act_pose_dir + $pose_delete + \".iff\");\n    \n    c_refresh_tabs; \n    c_refresh_delete_menu;\n}\n\nglobal proc c_create_pose()\n{\n    string $save_selection[] = `ls -sl`;\n    camera -centerOfInterest 5 -focalLength 35 -lensSqueezeRatio 1 -cameraScale 1 -horizontalFilmAperture 1.4173 -horizontalFilmOffset 0 -verticalFilmAperture 0.9449 -verticalFilmOffset 0 -filmFit Fill -overscan 1 -motionBlur 0 -shutterAngle 144 -nearClipPlane 0.1 -farClipPlane 10000 -orthographic 0 -orthographicWidth 30 -panZoomEnabled 0 -horizontalPan 0 -verticalPan 0 -zoom 1; objectMoveCommand; cameraMakeNode 1 \"\";\n    rename \"create_pose_temp_cam\";\n    select -cl;\n    select -r $save_selection;\n    setAttr create_pose_temp_cam.tx 175;\n    setAttr create_pose_temp_cam.ty 130;\n    setAttr create_pose_temp_cam.tz 300;\n    setAttr create_pose_temp_cam.rx -6.5;\n    setAttr create_pose_temp_cam.ry 30;\n    window -w 300 -h 450 -tb false -menuBar false -s false create_pose_w;\n    formLayout create_pose_FL;\n    \n    paneLayout -w 300 -h 300 -p create_pose_FL create_pose_panel;\n    string $campanel = \"pose_temp_camPanel\";\n    modelPanel -p create_pose_panel -mbv 0 $campanel;\n    lookThroughModelPanel create_pose_temp_cam $campanel;\n    modelEditor -edit -nurbsCurves 0 -cameras 0 -gr 0 -hud 0 -sel 0 -ofs 0 -m 0 -da smoothShaded $campanel;\n    setParent..;\n    setParent..;\n    \n    text -l \"Pose Name:\" pose_name_text;\n    formLayout -edit -attachForm pose_name_text \"top\" 316 -attachForm pose_name_text \"left\" 30 create_pose_FL;\n    textField -w 140 -h 25 pose_name_field;\n    formLayout -edit -attachForm pose_name_field \"top\" 310 -attachForm pose_name_field \"left\" 100 create_pose_FL;\n    text -l \"Tab:\" tab_name_text;\n    formLayout -edit -attachForm tab_name_text \"top\" 351 -attachForm tab_name_text \"left\" 60 create_pose_FL;\n    optionMenu -w 140 tab_name_menu;\n    formLayout -edit -attachForm tab_name_menu \"top\" 348 -attachForm tab_name_menu \"left\" 100 create_pose_FL;\n    \n    string $script_proy_dir = ((`workspace -q -rd`) + \"scripts/pose/\");      //Declara la ruta en el proyecto para el script de poses.\n    string $file_tabs = ($script_proy_dir + \"tabs.script\");                  //Declara como se llama el archivo que nos interesa.\n    $file_tabs_exist = `filetest -w $file_tabs`;                             //Nos dice si el archivo que buscamos existe.\n    if ($file_tabs_exist == 0) $file_tabs_Id = `fopen $file_tabs \"w\"`;       //Si el archivo NO existe lo crea, vacio.\n    if ($file_tabs_exist == 1) $file_tabs_Id = `fopen $file_tabs \"r\"`;       //Si el archivo SI existe lo pone en modo lectura.\n    string $file_tabs_save = `fread $file_tabs_Id $file_tabs_save`;          //Lee y guarda l ainformaci?n del archivo.\n    string $tabs_list[] = stringToStringArray($file_tabs_save,\",\");          //Crea un array con los elementos del archivo.\n    $tabs_size = `size($tabs_list)`;                                         //Declara la cantidad de elementos leidos.\n    fclose $file_tabs_Id;\n    \n    for($cont=0;$cont<$tabs_size;$cont++){\n        menuItem -label $tabs_list[$cont] -p tab_name_menu;\n    }\n    \n    text -l \"Select the curves that make up the pose.\" pose_remind_text;\n    formLayout -edit -attachForm pose_remind_text \"top\" 385 -attachForm pose_remind_text \"left\" 50 create_pose_FL;\n    button -w 100 -h 30 -l \"Save\" -c \"save_pose_c;deleteUI create_pose_w; deleteUI -panel pose_temp_camPanel; delete create_pose_temp_cam;c_refresh_delete_menu;\" save_pose_b;\n    formLayout -edit -attachForm save_pose_b \"top\" 410 -attachForm save_pose_b \"left\" 30 create_pose_FL;\n    button -w 100 -h 30 -l \"Cancel\" -c \"deleteUI create_pose_w; deleteUI -panel pose_temp_camPanel; delete create_pose_temp_cam;\" cancel_pose_b;\n    formLayout -edit -attachForm cancel_pose_b \"top\" 410 -attachForm cancel_pose_b \"left\" 160 create_pose_FL;\n    showWindow create_pose_w;\n}\n\n//Crea el menu\nformLayout pose_character_FL;\n\nformLayout -edit\n    -attachForm pose_character_FL \"top\" 0\n    -attachForm pose_character_FL \"bottom\" 0\n    -attachForm pose_character_FL \"left\" 0\n    -attachForm pose_character_FL \"right\" 0\n    \nbase_FL;\n\ntext -l \"Character:\" pose_character_text;\ntextField -w 140 -h 25 -tx $pose_char -cc c_savename_pose pose_character_F;\ntabLayout -p pose_character_FL tabs_L;\nc_refresh_tabs;\n\n//Tabs\nglobal proc c_refresh_tabs()\n{\n    if(`tabLayout -exists tabs_L`) deleteUI tabs_L;\n    tabLayout -p pose_character_FL tabs_L;\n    formLayout -edit -attachForm tabs_L \"top\" 40 -attachForm tabs_L \"left\" 0 -attachForm tabs_L \"bottom\" 0 -attachForm tabs_L \"right\" 0 pose_character_FL;\n    \n    sysFile -makeDir ((`workspace -q -rd`) + \"scripts/pose\");                //Crea la carpeta para el contenido del script.\n    string $script_proy_dir = ((`workspace -q -rd`) + \"scripts/pose/\");      //Declara la ruta en el proyecto para el script de poses.\n    string $file_tabs = ($script_proy_dir + \"tabs.script\");                  //Declara como se llama el archivo que nos interesa.\n    $file_tabs_exist = `filetest -w $file_tabs`;                             //Nos dice si el archivo que buscamos existe.\n    if ($file_tabs_exist == 0) $file_tabs_Id = `fopen $file_tabs \"w\"`;       //Si el archivo NO existe lo crea, vacio.\n    if ($file_tabs_exist == 1) $file_tabs_Id = `fopen $file_tabs \"r\"`;       //Si el archivo SI existe lo pone en modo lectura.\n    string $file_tabs_save = `fread $file_tabs_Id $file_tabs_save`;          //Lee y guarda l ainformaci?n del archivo.\n    fclose $file_tabs_Id;\n    string $tabs_list[] = stringToStringArray($file_tabs_save,\",\");          //Crea un array con los elementos del archivo.\n    $tabs_size = `size($tabs_list)`;\n    \n    for($cont=0;$cont<$tabs_size;$cont++)\n    {\n        formLayout -p tabs_L $tabs_list[$cont];\n        scrollLayout -p $tabs_list[$cont] ($tabs_list[$cont] + \"_SL\");\n        formLayout -edit -attachForm ($tabs_list[$cont] + \"_SL\") \"top\" 0 -attachForm ($tabs_list[$cont] + \"_SL\") \"bottom\" 0 -attachForm ($tabs_list[$cont] + \"_SL\") \"left\" 0 -attachForm ($tabs_list[$cont] + \"_SL\") \"right\" 0 $tabs_list[$cont];\n        gridLayout -numberOfColumns 3 -cellWidthHeight 130 170 -p ($tabs_list[$cont] + \"_SL\") ($tabs_list[$cont] + \"_GL\");\n        setParent..;\n        setParent..;\n    }\n\n    for($cont=0;$cont<$tabs_size;$cont++)\n    {\n        string $act_pose_dir = ((`workspace -q -rd`) + \"scripts/pose/\" + $tabs_list[$cont] + \"/\");\n        string $dir_file_poses = ($act_pose_dir + \"poses.script\");\n        $file_poses_exist = `filetest -w $dir_file_poses`;\n        if ($file_poses_exist == 0) $file_poses_Id = `fopen $dir_file_poses \"w\"`;\n        if ($file_poses_exist == 1) $file_poses_Id = `fopen $dir_file_poses \"r\"`;\n        string $poses_var = `fread $file_poses_Id $poses_var`;\n        fclose $file_poses_Id;\n        string $poses_list[] = stringToStringArray($poses_var,\",\");\n        $poses_size = `size($poses_list)`;\n    \n        for($count=0;$count<$poses_size;$count++)\n        {\n\t        string $file_pose_r = ((`workspace -q -rd`) + \"scripts/pose/\" +  $tabs_list[$cont] + \"/\" + $poses_list[$count] + \".pose\");\n\t        float $file_exists = `filetest -r $file_pose_r`;\n\t        if($file_exists == 1){\n\t        $filePoseId_r = `fopen $file_pose_r \"r\"`;\n\t        string $pose_atributes = `fgetline $filePoseId_r`;\n            string $pose_valors = `fgetline $filePoseId_r`;\n            fclose $filePoseId_r;\n\n            //Creaci?n del bot?n.\n            formLayout -w 100 -p ($tabs_list[$cont] + \"_GL\") ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_FL\");\n            text -w 130 -l $poses_list[$count] -al center -p ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_FL\") ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_text01\");\n            iconTextButton -style \"iconAndTextVertical\" -image ($act_pose_dir + $poses_list[$count] + \".iff\") -w 116 -h 130 -command (\"c_pose_change \" + $tabs_list[$cont] + \" \" + $poses_list[$count]) -p ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_FL\") ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_but\");\n            $sli_value = 0;\n            text -w 30 -l $sli_value -p ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_FL\") ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_text02\");\n            intSlider -w 75 -en 0 -minValue 0 -maxValue 100 -value 0 -step 1 -dc ( \"c_sli_change \" + $tabs_list[$cont] + \" \" + $poses_list[$count]) -p ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_FL\") ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_sli\");\n            iconTextButton -w 12 -image arrowLeft.png -c (\"c_sli_reset \" + $tabs_list[$cont] + \" \" + $poses_list[$count] + \";c_save_act_pose \" + $tabs_list[$cont] + \" \" + $poses_list[$count]) ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_reset_sli\");\n            formLayout -edit -attachForm ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_text01\") \"top\" 3 -attachForm ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_but\") \"left\" 3 \n            -attachForm ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_but\") \"top\" 20 -attachForm ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_text02\") \"top\" 155 -attachForm ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_sli\") \"top\" 155 \n            -attachForm ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_sli\") \"left\" 30 -attachForm ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_reset_sli\") \"top\" 155 -attachForm ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_reset_sli\") \"left\" 108 ($tabs_list[$cont] + \"_\" + $poses_list[$count] + \"_FL\");\n            setParent..;\n            }\n        }\n    }\n}\nglobal proc c_save_act_pose (string $tab, string $pose)\n{\n    global float $global_act_valor[];\n    clear $global_act_valor;\n    float $sli_valor = `intSlider -q -v ($tab + \"_\" + $pose + \"_sli\")`;\n    if($sli_valor==0)\n    {\n        $char_name = `textField -q -tx pose_character_F`;\n\t    string $file_pose = ((`workspace -q -rd`) + \"scripts/pose/\" +  $tab + \"/\" + $pose + \".pose\");\n\t    $filePoseId = `fopen $file_pose \"r\"`;\n\t    string $pose_atributes = `fgetline $filePoseId`;\n        string $atributes[] = stringToStringArray($pose_atributes,\",\");\n        $q_atributes = `size($atributes)`;\n        fclose $filePoseId;\n        for($cont=0;$cont<$q_atributes;$cont++)\n        {\n            $global_act_valor[$cont] = `getAttr ($char_name + $atributes[$cont])`; \n        }\n    }\n    intSlider -edit -en 1 ($tab + \"_\" + $pose + \"_sli\");\n}\n\nglobal proc c_sli_change (string $tab, string $pose)\n{\n    global float $global_act_valor[];\n    float $sli_valor = `intSlider -q -v ($tab + \"_\" + $pose + \"_sli\")`;\n    text -edit -l $sli_valor ($tab + \"_\" + $pose + \"_text02\");\n    \n    //Cargar los atributos y sus valores\n    $char_name = `textField -q -tx pose_character_F`;\n\tstring $file_pose = ((`workspace -q -rd`) + \"scripts/pose/\" +  $tab + \"/\" + $pose + \".pose\");\n\t$filePoseId = `fopen $file_pose \"r\"`;\n\tstring $pose_atributes = `fgetline $filePoseId`;\n    string $atributes[] = stringToStringArray($pose_atributes,\",\");\n    $q_atributes = `size($atributes)`;\n    \n    string $pose_charge = `fgetline $filePoseId`;\n    string $final_valors[] = stringToStringArray($pose_charge,\",\");\n    $q_pose = `size($final_valors)`;\n    fclose $filePoseId;\n    float $final_valor[];\n    for($cont=0;$cont<$q_atributes;$cont++){$final_valor[$cont] = $final_valors[$cont];}\n    \n    for($cont=0;$cont<$q_atributes;$cont++)\n    {\n        $calc = ($final_valor[$cont] - $global_act_valor[$cont]) / 100 * $sli_valor;\n        setAttr ($char_name + $atributes[$cont]) ($global_act_valor[$cont] + $calc);\n    }\n    \n    \n\n}\n\nglobal proc c_sli_reset (string $tab, string $pose)\n{\n    intSlider -edit -v 0 ($tab + \"_\" + $pose + \"_sli\");\n    text -edit -l 0 ($tab + \"_\" + $pose + \"_text02\");\n}\n\nformLayout -edit\n\t-attachForm pose_character_text \"top\" 15\n\t-attachForm pose_character_text \"left\" 100\n\t-attachForm pose_character_F \"top\" 10\n\t-attachForm pose_character_F \"left\" 170\n\t-attachForm tabs_L \"top\" 40\n\t-attachForm tabs_L \"left\" 0\n\t-attachForm tabs_L \"bottom\" 0\n\t-attachForm tabs_L \"right\" 0\n\t\npose_character_FL;\n\nshowWindow $poses_w;\n\nglobal proc save_pose_c ()\n{\n    string $tab_select = `optionMenu -q -v tab_name_menu`;                                    //Declara en una variable el tab al que pertenece la pose.\n    string $pose_dir = ((`workspace -q -rd`) + \"scripts/pose/\" + $tab_select + \"/\");          //Declara en una variable la direccion donde se guardar? la pose.\n    $pose_name = `textField -q -tx pose_name_field`;                                          //Declara en una variable el nombre de la pose.\n    $curves_pose = `ls -sl \"*_ac_*\"`;                                                         //Declara en una lista las curvas seleccionadas.\n    $curves_pose_ref = `ls -sl (\"*:*\" + \"*_ac_*\")`;                                           //Declara en una lista las curvas seleccionadas pertenecientes a una referencia.\n    $q_curves_pose_ref = `size($curves_pose_ref)`;                                            //Declara en una variable la cantidad de curvas de referencia.\n    appendStringArray($curves_pose, $curves_pose_ref,$q_curves_pose_ref);                     //A?ade a la lista de las curvas la lista de curvas de referencia.\n    $q_curves_pose = `size($curves_pose)`;                                                    //Declara en una variable la cantidad de curvas total.\n    $act_frame = `currentTime -q`;                                                            //Declara en una variable el frame actual.\n    \n    setFocus  pose_temp_camPanel;                                                             //Activa el panel de la ventana de guardar pose.\n    playblast  -format \"iff\" -cf ($pose_dir + $pose_name + \".iff\") -fp 0  -viewer 0 -showOrnaments 0 -percent 100 -quality 100 -widthHeight 116 130 -frame $act_frame;        //Guarda la captura de imagen en formato iff.\n    \n    string $total_atributes[];                                                                //Declaramos una lista para guardar todos los atributos de las curvas.\n    for ($cont=0; $cont < $q_curves_pose; $cont++)\n    {\n        $atributes = `listAttr -k -u -s $curves_pose[$cont]`;                                    //Declara una lista con los atributos de la curva indicada\n        $q_atributes = `size($atributes)`;                                                    //Declara una variable con la cantidad de atributos de la lista.\n        string $save_atributes[];                                                             //Declaramos una lista donde pondremos los atributos con el nombre de la curva.\n        for ($count = 0; $count < $q_atributes; $count++)\n        {\n            $temporal_atribute = ($curves_pose[$cont] + \".\" + $atributes[$count]);            //Declara una variable con el nombre de la curva . y el nombre del atributo.\n            $atribute_noname = `match \"\\\\_ac_.*\" $temporal_atribute`;                         //Elimina el nombre del personaje a la curva.\n            $save_atributes[$count] = $atribute_noname;                                       //Guarda en la lista el nombre de la curva . y el nombre del atributo.\n        }\n        appendStringArray($total_atributes,$save_atributes,$q_atributes);                     //Convierte la lista de curva . atributo en una sola variable.\n    }\n    \n    $q_total_atributes = `size($total_atributes)`;                                            //Declaramos una variable con la cantidad de atributos totales.\n    string $name_atributes[];                                                                 //Declara una lista donde pondremos el nombre de la curva y los atributos sin eliminar el nombre del personaje.                                                                 \n    for ($cont=0; $cont < $q_curves_pose; $cont++)\n    {\n        $atributes = `listAttr -k -u -s $curves_pose[$cont]`;                                    //Declara un lista con los atributos de la curva indicada.\n        $q_atributes = `size($atributes)`;                                                    //Declara una cariable con la cantidad de atributos de la lista.\n        \n        string $save_atributes[];                                                             //Declara un lista donde pondremos los atributos con el nombre de la curva indicada.\n        for ($count = 0; $count < $q_atributes; $count++)                                     \n        {\n            $save_atributes[$count] = ($curves_pose[$cont] + \".\" + $atributes[$count]);       //Declara una lista donde pone el nombre de la curva . y el nombre del atributo.       \n        }\n        appendStringArray($name_atributes,$save_atributes,$q_atributes);                      //Convierte la lista de curva . y atributo en una sola variable.\n    }\n    \n    string $line_cero = (stringArrayToString ($total_atributes,\",\"));                         //Crea una variable con todos los atributos separados por ,\n    $q_totalatrib = `size($total_atributes)`;                                                 //Declara una variable con la cantidad de atributos.\n    string $temp_valor[];                                                                     //Declara una lista donde guardaremos temporalmente el valor de cada atributo.\n    for ($count = 0; $count < $q_totalatrib ; $count++)\n    {\n        $temp_valor[$count] = `getAttr $name_atributes[$count]`;                              //Guardamos en la lista el valor de cada atributo.\n    }\n    \n    $saveinfo[0] = $line_cero;                                                                //Declaramos una lista y ponemos de primer valor el nombre de los atributos.\n    $saveinfo[1] = stringArrayToString($temp_valor,\",\");                                      //Ponemos de segundo valor de la lista los valores de los atributos.\n    $q_temp_valor = `size($temp_valor)`;                                                      //Declaramos una variable con la cantidad de valores de atributos.\n    string $fileBodyPoseDir = ($pose_dir + $pose_name + \".pose\");                             //Declaramos en una variable la direccion y nombre del archivo que guardara la pose. \n    $fileBodyPoseId = `fopen $fileBodyPoseDir \"w\"` ;                                          //Abre el archivo en modo escritura (si no existe lo crea). \n    for($line in $saveinfo) fprint $fileBodyPoseId ($line+\"\\n\") ;                             //Escribe en el archivo las 2 lineas.       \n    fclose $fileBodyPoseId;                                                                   //Cierra el archivo.\n    \n    // Guardar nombre de pose en el listado \n    string $fileBodyPoses = ($pose_dir + \"poses.script\");                                     //Declara en una variable la direcci?n y nombre del archivo donde guardaremos el nombre de las poses.\n    $fileBodyexist = `filetest -w $fileBodyPoses`;                                            //Declara una variable con el valor de la existencia del archivo.\n    if ($fileBodyexist == 0) $fileBodyPosesId = `fopen $fileBodyPoses \"w\"`;                   //Si el archivo no existe lo crea.\n    if ($fileBodyexist == 1) $fileBodyPosesId = `fopen $fileBodyPoses \"r\"`;                   //Si el archivo si existe lo abre en modo lectura.\n    string $bodyposesarray = `fread $fileBodyPosesId $bodyposesarray`;                        //Declara una variable con el contenido del archivo.\n    fclose $fileBodyPosesId;\n    \n    string $body_poses_list[] = stringToStringArray($bodyposesarray,\",\");                     //Declara una lista separando los nombres de la variable.\n    $body_poses_size = `size($body_poses_list)`;                                              //Declara una variable con la cantidad de nombres de la lista.\n    string $name_pose[];                                                                      //Declara una lista donde pondremos los nombres nuevos de las poses.\n    $name_pose[0] = $pose_name;                                                               //Declaramos una lista con el nombre de la pose nueva.\n    appendStringArray($body_poses_list,$name_pose,1);                                         //A?adimos el valos nuevo a la lista de las poses.\n    $save_info = stringArrayToString($body_poses_list,\",\");                                   //Declaramos una variable donde ponemos todas las poses separadas por una ,\n    $body_poses_size = `size($body_poses_list)`;                                              //Declaramos una variable con la cantidad de poses totales.\n        \n    string $fileBodyPoseDir = ($pose_dir + \"poses.script\");                                   //Declaramos en una variable la direccion del archivo.\n    $fileBodyPoseId = `fopen $fileBodyPoseDir \"w\"` ;                                          //Abrimos el archivo en modo escritura. \n    fprint $fileBodyPoseId $save_info ;                                                       //Guardamos la variable con las poses en el archivo.      \n    fclose $fileBodyPoseId;                                                                   //Cerramos el archivo.\n    \n    //Creaci?n del bot?n.\n    formLayout -w 100 -p ($tab_select + \"_GL\") ($tab_select + \"_\" + $pose_name + \"_FL\");\n    text -w 130 -l $pose_name -al center -p ($tab_select + \"_\" + $pose_name + \"_FL\") ($tab_select + \"_\" + $pose_name + \"_text01\");\n    iconTextButton -style \"iconAndTextVertical\" -image ($pose_dir + $pose_name + \".iff\") -w 116 -h 130 -command (\"c_pose_change \" + $tab_select + \" \" + $pose_name) -p ($tab_select + \"_\" + $pose_name + \"_FL\") ($tab_select + \"_\" + $pose_name + \"_but\");\n    $sli_value = 0;\n    text -w 30 -l $sli_value -p ($tab_select + \"_\" + $pose_name + \"_FL\") ($tab_select + \"_\" + $pose_name + \"_text02\");\n    intSlider -w 75 -en 0 -minValue 0 -maxValue 100 -value 0 -step 1 -dc ( \"c_sli_change \" + $tab_select + \" \" + $pose_name) -p ($tab_select + \"_\" + $pose_name + \"_FL\") ($tab_select + \"_\" + $pose_name + \"_sli\");\n    iconTextButton -w 12 -image arrowLeft.png -c (\"c_sli_reset \" + $tab_select + \" \" + $pose_name + \";c_save_act_pose \" + $tab_select + \" \" + $pose_name) ($tab_select + \"_\" + $pose_name + \"_reset_sli\");\n    formLayout -edit -attachForm ($tab_select + \"_\" + $pose_name + \"_text01\") \"top\" 3 -attachForm ($tab_select + \"_\" + $pose_name + \"_but\") \"left\" 3 \n    -attachForm ($tab_select + \"_\" + $pose_name + \"_but\") \"top\" 20 -attachForm ($tab_select + \"_\" + $pose_name + \"_text02\") \"top\" 155 -attachForm ($tab_select + \"_\" + $pose_name + \"_sli\") \"top\" 155 \n    -attachForm ($tab_select + \"_\" + $pose_name + \"_sli\") \"left\" 30 -attachForm ($tab_select + \"_\" + $pose_name + \"_reset_sli\") \"top\" 155 -attachForm ($tab_select + \"_\" + $pose_name + \"_reset_sli\") \"left\" 108 ($tab_select + \"_\" + $pose_name + \"_FL\");\n    setParent..;\n    \n}\n\n\nglobal proc c_pose_change (string $tab, string $pose)\n{\n\t\n\t$char_name = `textField -q -tx pose_character_F`;\n\tstring $file_pose = ((`workspace -q -rd`) + \"scripts/pose/\" +  $tab + \"/\" + $pose + \".pose\");\n\t$filePoseId = `fopen $file_pose \"r\"`;\n\tstring $pose_atributes = `fgetline $filePoseId`;\n    string $atributes_temp[] = stringToStringArray($pose_atributes,\",\");\n    $q_atributes = `size($atributes_temp)`;\n    \n    string $pose_charge = `fgetline $filePoseId`;\n    string $pose_temp[] = stringToStringArray($pose_charge,\",\");\n    $q_pose = `size($pose_temp)`;\n    \n    select -cl;\n    string $sel_curves[];\n    for($cont = 0; $cont < ($q_atributes) ; $cont++)\n    {\n    \tfloat $pose_fin = $pose_temp[$cont];\n    \tif(objExists($char_name + $atributes_temp[$cont])){\n    \tsetAttr ($char_name + $atributes_temp[$cont]) $pose_fin;\n    \t$sel_curves[$cont]=`match \"^[^(\\r.)]*\" ($char_name + $atributes_temp[$cont])`;\n    \t}\n    }\n    select -r $sel_curves;\n}\n\nglobal proc press_facials_c (string $bodypose)\n{\n\t\n\t$pose_char = `textField -q -tx pose_character_F`;\n\tstring $poseread = ((`workspace -q -rd`) + \"scripts/poses/facials/\" + $bodypose + \".pose\");\n\t$fileBodyPosesId = `fopen $poseread \"r\"`;\n\tstring $pose_atributes = `fgetline $fileBodyPosesId`;\n    string $atributes_temp[] = stringToStringArray($pose_atributes,\",\");\n    $q_atributes = `size($atributes_temp)`;\n    \n    string $pose_charge = `fgetline $fileBodyPosesId`;\n    string $pose_temp[] = stringToStringArray($pose_charge,\",\");\n    $q_pose = `size($pose_temp)`;\n    \n    for($cont = 0; $cont < ($q_atributes - 1) ; $cont++)\n    {\n    \tfloat $pose_fin = $pose_temp[$cont];\n    \tsetAttr ($pose_char + $atributes_temp[$cont]) $pose_fin;\n    \tsetKeyframe ($pose_char + $atributes_temp[$cont]);\n    }\n}\n\nglobal proc c_savename_pose ()\n{\n    string $textsave = `textField -q -tx pose_character_F`; \n    string $scriptf = `internalVar -userScriptDir`;\n    string $fileRig = ($scriptf + \"character_pose.rig\") ;\n    $fileRigId = `fopen $fileRig \"w\"`;\n    fprint $fileRigId $textsave;\n    fclose $fileRigId;\n}\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "studioLibrary" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "studioLibrary" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "SLib" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import studiolibrary\nstudiolibrary.main()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "DisplayAffected" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "DisplayAffected" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "DisAf" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.25 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import maya.cmds as mc \ndef toggleDispAff():\n\tcurrentState = mc.displayPref(q = True, displayAffected = True)\n\tmc.displayPref(displayAffected = not currentState)\ntoggleDispAff()" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "RemoveTSM" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "RemoveTSM" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "rTSM" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "delete `ls -type script \"*TSM2FKIKSwitch*\" \"*:*TSM2FKIKSwitch*\" \"*:*:*TSM2FKIKSwitch*\" \"*:*:*:*TSM2FKIKSwitch*\" \"*:*:*:*:*TSM2FKIKSwitch*\"`;\nwhile (`menu -exists TSM2ControlsMenu`)\ndeleteUI -menu TSM2ControlsMenu;\n\nstring $path = `pluginInfo -q -path \"TSM2\"`;\n$path = (dirname($path) + \"/TSM2/FKIK.mel\");\nint $file = `fopen $path \"r\"`;\nstring $fkikScript = \"\";\nstring $nextLine = `fgetline $file`;\nwhile(size($nextLine) > 0) {\n$fkikScript += $nextLine;\n$nextLine = `fgetline $file`;\n}\nfclose $file;\n$path = `pluginInfo -q -path \"TSM2\"`;\n$path = (dirname($path) + \"/TSM2/TSM2_mirrorPose.mel\");\nint $file = `fopen $path \"r\"`;\nstring $mirrorScript = \"\";\nstring $nextLine = `fgetline $file`;\nwhile(size($nextLine) > 0) {\n$mirrorScript += $nextLine;\n$nextLine = `fgetline $file`;\n}\nfclose $file;\n$mirrorScript += \"\\n\\nTSM2_mirrorPose;\";\nstring $afterScript = \"if (`menu -exists TSM2ControlsMenu`) deleteUI -menu TSM2ControlsMenu\";\nstring $beforeScript;\n$beforeScript = \"doEnableNodeItems false all; doEnableNodeItems true all;\\n\";\n$beforeScript += \"if (`menu -exists TSM2ControlsMenu` == 0) {\\n\";\n$beforeScript += \"menu -to true -label \\\"TSM Controls\\\" -parent $gMainWindow TSM2ControlsMenu;\";\n$beforeScript += (\"menuItem -label \\\"FKIK Switch\\\" -command \\\"\" + (encodeString($fkikScript)) + \"\\\";\");\n$beforeScript += (\"menuItem -label \\\"Refresh Rig\\\" -command \\\"doEnableNodeItems false all; doEnableNodeItems true all;\\\";\");\n$beforeScript += (\"menuItem -label \\\"Mirror Pose\\\" -command \\\"\" + (encodeString($mirrorScript)) + \"\\\";\");\n$beforeScript += \"}\\n\";\nscriptNode -st 2 -bs $beforeScript -as $afterScript -n TSM2FKIKSwitch;\nscriptNode -executeBefore TSM2FKIKSwitch; " 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "NURBS to single object" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "NURBS to single object" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.2 
        -image "/home/italic/maya/icons/nurbs_to_object.PNG" 
        -image1 "/home/italic/maya/icons/nurbs_to_object.PNG" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "parent -r -s;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "dkAnim" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "dkAnim" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "dkAn" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "dkAnim;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Local Rotation Axes" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Local Rotation Axes" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "LRA" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconDisplay.png" 
        -image1 "menuIconDisplay.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "ToggleLocalRotationAxes" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "WaltButtons" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "WaltButtons" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "WALT" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "\tstring $floatShelf = \"floatShelf\";\n\n\tif (`window -ex $floatShelf`)\n\t\tdeleteUI $floatShelf;\n\t\t\n\twindow -title \"Walter\" $floatShelf;\n\n \tstring $tabs = `tabLayout`;\n\n \tstring $shelf = `shelfLayout`;\n\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"FKIK Switch\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"FKIK Switch\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"FKIK\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"commandButton.png\" \n        -image1 \"commandButton.png\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"global proc TSM2_FKIKSwitch()\\n{\\n\\nint $cycleCheckState;\\n\\n$cycleCheckState = `cycleCheck -q -e`;\\nif ($cycleCheckState == 1)\\n    cycleCheck -e off;\\n\\nint $i;\\n\\nstring $selNodes[] = `selectedNodes`; \\nstring $buffer[]; \\nint $numTokens = 0;\\n\\n$numTokens = `tokenize $selNodes[0] \\\"|\\\" $buffer`;\\nstring $theNode = $buffer[$numTokens-1];\\n\\nstring $ns = \\\"\\\";\\n$numTokens = `tokenize $theNode \\\":\\\" $buffer`;\\n$theNode = $buffer[ $numTokens-1 ];\\n\\nif( $numTokens > 1 )\\n{\\n\\tfor( $i = 0; $i < (size($buffer) - 1); $i++ )\\n\\t{\\n\\t\\t$ns += $buffer[$i];\\n\\t\\t$ns += \\\":\\\";\\n\\t}\\n}\\n\\n$numTokens = `tokenize $theNode \\\"_\\\" $buffer`;\\nstring $sysPref = $buffer[0];\\n\\nstring $switchAttribute = $sysPref + \\\"_FKIK\\\";\\nstring $upperBody = $ns + \\\"Upper_Body\\\";\\nstring $userswitch = $upperBody + \\\".\\\" + $switchAttribute;\\n\\nint $currentMode = `getAttr $userswitch`;\\n\\nstring $controlSet;\\nif( $currentMode == 0 )\\n{\\n\\t$controlSet = $ns + $sysPref + \\\"_IK_Controls\\\";\\t\\n}\\nelse\\n{\\n\\t$controlSet = $ns + $sysPref + \\\"_FK_Controls\\\";\\n}\\n\\nselect $controlSet;\\nstring $controls[] = `selectedNodes`; \\nfor( $i = 0; $i < size($controls); $i++ ) \\n{\\n\\tstring $control = $controls[$i];\\n\\t$numTokens = `tokenize $control \\\"|\\\" $buffer`;\\n\\t$control = $buffer[$numTokens-1];\\n\\t\\n\\tstring $switch = $control + \\\"_SWITCH\\\";\\n\\t\\n\\tif( `objExists $switch` )\\n\\t{\\n\\t\\tstring $controlAttributes[] = `listAttr -k $control`;\\n\\t\\tstring $switchAttributes[] = `listAttr -k $switch`;\\n\\t\\t\\n\\t\\tint $j;\\n\\t\\tfor( $j = 0; $j < size($controlAttributes); $j++ )\\n\\t\\t{\\n\\t\\t\\tif( $controlAttributes[$j] == \\\"Reposition\\\" )\\n\\t\\t\\t{\\n\\t\\t\\t\\t$j++;\\n\\t\\t\\t}\\t\\n\\t\\t\\tstring $attributeToSet = $control + \\\".\\\" + $controlAttributes[$j];\\n\\t\\t\\tint $foundAttribute = 0;\\n\\t\\t\\tint $k;\\n\\t\\t\\tfor( $k = 0; $k < size($switchAttributes); $k++ )\\n\\t\\t\\t{\\n\\t\\t\\t\\tif( $controlAttributes[$j] == $switchAttributes[$k] )\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t$foundAttribute = 1;\\n\\t\\t\\t\\t\\tstring $attributeToGet = $switch + \\\".\\\" + $switchAttributes[$k];\\n\\t\\t\\t\\t\\tfloat $valueOfAttribute = `getAttr $attributeToGet`;\\n\\t\\t\\t\\t\\tsetAttr $attributeToSet $valueOfAttribute; \\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif( $foundAttribute == 0 )\\n\\t\\t\\t{\\n\\t\\t\\t\\tsetAttr $attributeToSet 0;\\n\\t\\t\\t}\\n\\n\\t\\t\\tsetKeyframe $attributeToSet;\\n\\t\\t}\\n\\t}\\n}\\n\\nif( $currentMode == 0 )\\n{\\n\\t$currentMode = 1;\\t\\n}\\nelse\\n{\\n\\t$currentMode = 0;\\n}\\nsetAttr $userswitch $currentMode;\\nsetKeyframe $userswitch;\\n\\n$keytime = `findKeyframe -which previous -attribute $switchAttribute -animation objects $upperBody`;\\n$now = `currentTime -query`;\\nif( $keytime == $now )\\n{\\n\\tsetKeyframe -time 0 $userswitch;\\n\\t$keytime = 0;\\n}\\nkeyTangent -time $keytime -outTangentType step -attribute $switchAttribute -\\tanimation objects $upperBody;\\n\\nif ($cycleCheckState == 1)\\n    cycleCheck -e on;\\n\\nselect -clear;\\n}\\nTSM2_FKIKSwitch;\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"All\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"All\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"All\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"ANIM:WALT:breath_ctrl\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:MouthAll\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_MouthCrnrSub\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_MouthCrnr\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_SnearUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_SnearUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_LipAllUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_MouthCrnrSub\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_MouthCrnr\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Jaw\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_SnearDn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_SnearDn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_LipAll_Dn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_BrowOut\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_BrowMid\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_BrowIn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_BrowAll\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_BrowOut\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_BrowMid\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_BrowIn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_BrowAll\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_Pupil\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_LidLow\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_LidUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_Pupil\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_LidLow\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_LidUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:EyesGlobal\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Shoulder\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Shoulder\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Hand\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Lower_Arm\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Upper_Arm\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Hand\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Lower_Arm\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Upper_Arm\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Arm_IK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Arm_IK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Upper_Body\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftLeg_IK_Leg\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightLeg_IK_Leg\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Head_FK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Head_Neck\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Arm_Pole_Vector\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Arm_Pole_Vector\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightLeg_Leg_Pole_Vector\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftLeg_Leg_Pole_Vector\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Spine_Torso_FK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Spine_Middle_FK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Spine_Base_FK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightFinger2_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightFinger1_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightFinger4_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightFinger3_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightThumb_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftFinger1_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftFinger3_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftFinger2_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftThumb_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftFinger4_finger_control\\\"`);\\ncatch (`select -add \\\"ANIMRN\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"body\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"body\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"body\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Arm_IK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Arm_IK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Upper_Body\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftLeg_IK_Leg\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightLeg_IK_Leg\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Head_FK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Head_Neck\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Arm_Pole_Vector\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Hand\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Lower_Arm\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Upper_Arm\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Shoulder\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Shoulder\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Arm_Pole_Vector\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Hand\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Lower_Arm\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Upper_Arm\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightLeg_Leg_Pole_Vector\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftLeg_Leg_Pole_Vector\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Spine_Torso_FK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Spine_Middle_FK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Spine_Base_FK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightFinger2_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightFinger1_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightFinger4_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightFinger3_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightThumb_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftFinger1_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftFinger3_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftFinger2_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftThumb_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftFinger4_finger_control\\\"`);\\ncatch (`select -add \\\"ANIMRN\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"spine\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"spine\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"spine\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"ANIM:WALT:Spine_Torso_FK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Spine_Middle_FK\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Spine_Base_FK\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 34\n        -height 34\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"head\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"head\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"head\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"ANIM:WALT:Head_Neck\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Head_FK\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"arms\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"arms\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"arms\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Shoulder\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Shoulder\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Hand\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Lower_Arm\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightArm_Upper_Arm\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Hand\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Lower_Arm\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftArm_Upper_Arm\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"fing\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"fing\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"fing\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"ANIM:WALT:RightThumb_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightFinger4_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightFinger3_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightFinger2_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:RightFinger1_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftThumb_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftFinger4_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftFinger3_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftFinger2_finger_control\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:LeftFinger1_finger_control\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 19\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"sep\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"sep\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.2 \n        -image \"/home/italic/maya/icons/separator.png\" \n        -image1 \"/home/italic/maya/icons/separator.png\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"face\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"face\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"face\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"ANIM:WALT:MouthAll\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_MouthCrnrSub\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_MouthCrnr\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_SnearUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_SnearUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_LipAllUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_MouthCrnrSub\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_MouthCrnr\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Jaw\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_SnearDn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_SnearDn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_LipAll_Dn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_BrowOut\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_BrowMid\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_BrowIn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_BrowAll\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_BrowOut\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_BrowMid\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_BrowIn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_BrowAll\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_Pupil\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_LidLow\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_LidUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_Pupil\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_LidLow\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_LidUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:EyesGlobal\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"eyes\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"eyes\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"eyes\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"ANIM:WALT:Right_BrowOut\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_BrowMid\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_BrowIn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_BrowAll\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_BrowOut\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_BrowMid\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_BrowIn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_BrowAll\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_Pupil\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_LidLow\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_LidUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_Pupil\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_LidLow\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_LidUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:EyesGlobal\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"mouth\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"mouth\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"mouth\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"ANIM:WALT:MouthAll\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_MouthCrnrSub\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_MouthCrnr\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_SnearUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_SnearUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_LipAllUp\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_MouthCrnrSub\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_MouthCrnr\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Jaw\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_SnearDn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Right_SnearDn\\\"`);\\ncatch (`select -add \\\"ANIM:WALT:Left_LipAll_Dn\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n\n \ttabLayout -edit -tabLabel $shelf \"Walter\" $tabs;\n\n \tshowWindow $floatShelf;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "WaltButtons" 
        -enableBackground 0
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "WaltButtons" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "ARG" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "\tstring $floatShelf = \"floatShelf\";\n\n\tif (`window -ex $floatShelf`)\n\t\tdeleteUI $floatShelf;\n\t\t\n\twindow -title \"Argus\" $floatShelf;\n\n \tstring $tabs = `tabLayout`;\n\n \tstring $shelf = `shelfLayout`;\n\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"FKIK Switch\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"FKIK Switch\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"FKIK\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"commandButton.png\" \n        -image1 \"commandButton.png\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"global proc TSM2_FKIKSwitch()\\n{\\n\\nint $cycleCheckState;\\n\\n$cycleCheckState = `cycleCheck -q -e`;\\nif ($cycleCheckState == 1)\\n    cycleCheck -e off;\\n\\nint $i;\\n\\nstring $selNodes[] = `selectedNodes`; \\nstring $buffer[]; \\nint $numTokens = 0;\\n\\n$numTokens = `tokenize $selNodes[0] \\\"|\\\" $buffer`;\\nstring $theNode = $buffer[$numTokens-1];\\n\\nstring $ns = \\\"\\\";\\n$numTokens = `tokenize $theNode \\\":\\\" $buffer`;\\n$theNode = $buffer[ $numTokens-1 ];\\n\\nif( $numTokens > 1 )\\n{\\n\\tfor( $i = 0; $i < (size($buffer) - 1); $i++ )\\n\\t{\\n\\t\\t$ns += $buffer[$i];\\n\\t\\t$ns += \\\":\\\";\\n\\t}\\n}\\n\\n$numTokens = `tokenize $theNode \\\"_\\\" $buffer`;\\nstring $sysPref = $buffer[0];\\n\\nstring $switchAttribute = $sysPref + \\\"_FKIK\\\";\\nstring $upperBody = $ns + \\\"Upper_Body\\\";\\nstring $userswitch = $upperBody + \\\".\\\" + $switchAttribute;\\n\\nint $currentMode = `getAttr $userswitch`;\\n\\nstring $controlSet;\\nif( $currentMode == 0 )\\n{\\n\\t$controlSet = $ns + $sysPref + \\\"_IK_Controls\\\";\\t\\n}\\nelse\\n{\\n\\t$controlSet = $ns + $sysPref + \\\"_FK_Controls\\\";\\n}\\n\\nselect $controlSet;\\nstring $controls[] = `selectedNodes`; \\nfor( $i = 0; $i < size($controls); $i++ ) \\n{\\n\\tstring $control = $controls[$i];\\n\\t$numTokens = `tokenize $control \\\"|\\\" $buffer`;\\n\\t$control = $buffer[$numTokens-1];\\n\\t\\n\\tstring $switch = $control + \\\"_SWITCH\\\";\\n\\t\\n\\tif( `objExists $switch` )\\n\\t{\\n\\t\\tstring $controlAttributes[] = `listAttr -k $control`;\\n\\t\\tstring $switchAttributes[] = `listAttr -k $switch`;\\n\\t\\t\\n\\t\\tint $j;\\n\\t\\tfor( $j = 0; $j < size($controlAttributes); $j++ )\\n\\t\\t{\\n\\t\\t\\tif( $controlAttributes[$j] == \\\"Reposition\\\" )\\n\\t\\t\\t{\\n\\t\\t\\t\\t$j++;\\n\\t\\t\\t}\\t\\n\\t\\t\\tstring $attributeToSet = $control + \\\".\\\" + $controlAttributes[$j];\\n\\t\\t\\tint $foundAttribute = 0;\\n\\t\\t\\tint $k;\\n\\t\\t\\tfor( $k = 0; $k < size($switchAttributes); $k++ )\\n\\t\\t\\t{\\n\\t\\t\\t\\tif( $controlAttributes[$j] == $switchAttributes[$k] )\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t$foundAttribute = 1;\\n\\t\\t\\t\\t\\tstring $attributeToGet = $switch + \\\".\\\" + $switchAttributes[$k];\\n\\t\\t\\t\\t\\tfloat $valueOfAttribute = `getAttr $attributeToGet`;\\n\\t\\t\\t\\t\\tsetAttr $attributeToSet $valueOfAttribute; \\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif( $foundAttribute == 0 )\\n\\t\\t\\t{\\n\\t\\t\\t\\tsetAttr $attributeToSet 0;\\n\\t\\t\\t}\\n\\n\\t\\t\\tsetKeyframe $attributeToSet;\\n\\t\\t}\\n\\t}\\n}\\n\\nif( $currentMode == 0 )\\n{\\n\\t$currentMode = 1;\\t\\n}\\nelse\\n{\\n\\t$currentMode = 0;\\n}\\nsetAttr $userswitch $currentMode;\\nsetKeyframe $userswitch;\\n\\n$keytime = `findKeyframe -which previous -attribute $switchAttribute -animation objects $upperBody`;\\n$now = `currentTime -query`;\\nif( $keytime == $now )\\n{\\n\\tsetKeyframe -time 0 $userswitch;\\n\\t$keytime = 0;\\n}\\nkeyTangent -time $keytime -outTangentType step -attribute $switchAttribute -\\tanimation objects $upperBody;\\n\\nif ($cycleCheckState == 1)\\n    cycleCheck -e on;\\n\\nselect -clear;\\n}\\nTSM2_FKIKSwitch;\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"all\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"all\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"all\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"rambo:LeftLeg_IK_Leg\\\"`);\\ncatch (`select -add \\\"rambo:RightLeg_IK_Leg\\\"`);\\ncatch (`select -add \\\"rambo:RightArm_Arm_IK\\\"`);\\ncatch (`select -add \\\"rambo:LeftArm_Arm_IK\\\"`);\\ncatch (`select -add \\\"rambo:Spine_Torso_FK\\\"`);\\ncatch (`select -add \\\"rambo:Spine_Middle_FK\\\"`);\\ncatch (`select -add \\\"rambo:Spine_Base_FK\\\"`);\\ncatch (`select -add \\\"rambo:LeftLeg_Leg_Pole_Vector\\\"`);\\ncatch (`select -add \\\"rambo:RightLeg_Leg_Pole_Vector\\\"`);\\ncatch (`select -add \\\"rambo:LeftArm_Arm_Pole_Vector\\\"`);\\ncatch (`select -add \\\"rambo:LeftArm_Shoulder\\\"`);\\ncatch (`select -add \\\"rambo:LeftThumb_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:LeftFinger4_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:LeftFinger3_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:LeftFinger2_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:LeftFinger1_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:RightArm_Shoulder_Trans\\\"`);\\ncatch (`select -add \\\"rambo:RightArm_Arm_Pole_Vector\\\"`);\\ncatch (`select -add \\\"rambo:RightArm_Shoulder\\\"`);\\ncatch (`select -add \\\"rambo:RightThumb_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:RightFinger4_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:RightFinger3_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:RightFinger2_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:RightFinger1_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:LeftArm_Shoulder_Trans\\\"`);\\ncatch (`select -add \\\"rambo:Head_FK\\\"`);\\ncatch (`select -add \\\"rambo:Head_Neck\\\"`);\\ncatch (`select -add \\\"rambo:Upper_Body\\\"`);\\ncatch (`select -add \\\"group6|nurbsCircle1\\\"`);\\ncatch (`select -add \\\"spat_grp|SPAT_ctrl|SPAT_ctrl\\\"`);\\ncatch (`select -add \\\"group3|nurbsCircle1\\\"`);\\ncatch (`select -add \\\"group2|nurbsCircle1\\\"`);\\ncatch (`select -add \\\"group1|nurbsCircle1\\\"`);\\ncatch (`select -add \\\"group5|nurbsCircle1\\\"`);\\ncatch (`select -add \\\"group4|nurbsCircle1\\\"`);\\ncatch (`select -add \\\"cookie2|cookie1\\\"`);\\ncatch (`select -add \\\"cookie5|cookie1\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_LipAll_Up\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_MouthCrnr\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_MouthCrnr\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_LipAll_Low\\\"`);\\ncatch (`select -add \\\"rambo:Jaw\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_BrowOut\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_BrowMid\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_BrowIn\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_BrowAll\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_BrowIn\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_BrowOut\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_BrowMid\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_BrowAll\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_Pupil\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_EyeShapeUp9\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_LidLow\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_EyeShapeUp12\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_LidUp\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_Pupil\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_EyeShapeUp6\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_LidLow\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_EyeShapeUp3\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_LidUp\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_CheekBn_R2\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_CheekBn_R1\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_CheekBn_L2\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_CheekBn_L1\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"body\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"body\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"body\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"rambo:RightFinger4_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:RightFinger3_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:RightFinger2_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:RightFinger1_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:LeftFinger4_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:LeftFinger3_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:LeftFinger2_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:LeftFinger1_finger_control\\\"`);\\ncatch (`select -add \\\"rambo:LeftArm_Arm_IK\\\"`);\\ncatch (`select -add \\\"rambo:RightArm_Arm_IK\\\"`);\\ncatch (`select -add \\\"rambo:RightArm_Arm_Pole_Vector\\\"`);\\ncatch (`select -add \\\"rambo:LeftArm_Arm_Pole_Vector\\\"`);\\ncatch (`select -add \\\"rambo:Head_FK\\\"`);\\ncatch (`select -add \\\"rambo:Head_Neck\\\"`);\\ncatch (`select -add \\\"rambo:LeftArm_Shoulder\\\"`);\\ncatch (`select -add \\\"rambo:RightArm_Shoulder\\\"`);\\ncatch (`select -add \\\"rambo:Spine_Torso_FK\\\"`);\\ncatch (`select -add \\\"rambo:Spine_Middle_FK\\\"`);\\ncatch (`select -add \\\"rambo:Spine_Base_FK\\\"`);\\ncatch (`select -add \\\"rambo:Upper_Body\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"spine\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"spine\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"spine\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"rambo:Spine_Torso_FK\\\"`);\\ncatch (`select -add \\\"rambo:Spine_Middle_FK\\\"`);\\ncatch (`select -add \\\"rambo:Spine_Base_FK\\\"`);\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"head\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"head\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"head\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"rambo:Head_FK\\\"`);\\ncatch (`select -add \\\"rambo:Head_Neck\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 19\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"sep\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"sep\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.5 \n        -image \"/home/italic/maya/icons/separator.png\" \n        -image1 \"/home/italic/maya/icons/separator.png\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"face\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"face\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"face\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"rambo:Ctr_R_SnearUp\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_SnearUp\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_LipAll_Up\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_BrowOut\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_BrowMid\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_BrowIn\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_BrowAll\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_BrowIn\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_BrowOut\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_BrowMid\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_BrowAll\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_Pupil\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_EyeShapeUp9\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_LidLow\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_EyeShapeUp12\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_LidUp\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_Pupil\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_EyeShapeUp6\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_LidLow\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_EyeShapeUp3\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_LidUp\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_CheekBn_R2\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_CheekBn_L2\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_MouthCrnr\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_MouthCrnr\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_SnearDn\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_SnearDn\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_LipAll_Low\\\"`);\\ncatch (`select -add \\\"rambo:Jaw\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"eyes\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"eyes\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"eyes\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"rambo:Ctr_L_BrowOut\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_BrowMid\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_BrowIn\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_BrowAll\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_BrowIn\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_BrowOut\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_BrowMid\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_BrowAll\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_Pupil\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_EyeShapeUp9\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_LidLow\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_EyeShapeUp12\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_LidUp\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_Pupil\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_EyeShapeUp6\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_LidLow\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_EyeShapeUp3\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_LidUp\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_CheekBn_R2\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_CheekBn_L2\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n    shelfButton\n        -enableCommandRepeat 1\n        -enable 1\n        -width 35\n        -height 35\n        -manage 1\n        -visible 1\n        -preventOverride 0\n        -annotation \"mth\" \n        -enableBackground 0\n        -align \"center\" \n        -label \"mth\" \n        -labelOffset 0\n        -rotation 0\n        -flipX 0\n        -flipY 0\n        -useAlpha 1\n        -font \"plainLabelFont\" \n        -imageOverlayLabel \"mth\" \n        -overlayLabelColor 0.8 0.8 0.8 \n        -overlayLabelBackColor 0 0 0 0.8 \n        -image \"aselect.xpm\" \n        -image1 \"aselect.xpm\" \n        -style \"iconOnly\" \n        -marginWidth 1\n        -marginHeight 1\n        -command \"select -cl;\\ncatch (`select -add \\\"rambo:Ctr_R_SnearUp\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_SnearUp\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_LipAll_Up\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_CheekBn_R2\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_CheekBn_L2\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_MouthCrnr\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_MouthCrnr\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_L_SnearDn\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_R_SnearDn\\\"`);\\ncatch (`select -add \\\"rambo:Ctr_LipAll_Low\\\"`);\\ncatch (`select -add \\\"rambo:Jaw\\\"`);\\n\" \n        -sourceType \"mel\" \n        -commandRepeatable 1\n        -flat 1\n    ;\n \ttabLayout -edit -tabLabel $shelf \"Argus\" $tabs;\n\n \tshowWindow $floatShelf;\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;

} 
