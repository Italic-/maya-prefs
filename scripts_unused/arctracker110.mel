////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Arc Tracker version 1.1.0 For Maya 2012+
// Written by Spencer Jones, www.spence-animator.co.uk, 03/07/09
// To install place script (arctracker110.mel) in scripts folder & run the command - arctracker110;
// Youtube Demo Video - http://youtu.be/-B3cwEhbq7Q
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

global proc arctracker110 (){

	//VARIABLES
		global string $attrackname;
		global string $atHelpername;
		global string $animpathname;
		global string $atmtKeysName;
		global string $atmtFramesName;
		$attrackname = "ArcTracker";
		$atHelpername = ($attrackname+"_Helper");
		$animpathname = ($attrackname+"_Path");
		$atmtKeysName = ($attrackname+"_Keys_");
		$atmtFramesName = ($attrackname+"_Frames_");
		string $atVersion = "1.1.0";
		float $supportedMayaVersion = 2012;
		string $credit = ("ArcTracker "+$atVersion+" "+$supportedMayaVersion+"+ | SpencerJones | spence-animator.co.uk");
		string $arcTrackerTitle = ("ArcTracker "+$atVersion+" "+$supportedMayaVersion+"+");
		float $startanim = `playbackOptions -q -min`;
		float $endanim = `playbackOptions -q -max`;
		float $defaultTrackScale = 1;
		int $objectListSize = 50;
		float $butw = 250;
		float $buth = 30;
		float $uispace = 0;

	//MAYA VERSION CHECK
	//float $mayaVersion = float(`about -version`);
	//if ($mayaVersion < $supportedMayaVersion) error ("ArcTracker supports Maya "+$supportedMayaVersion+" or later");
	
	//CHECK IF ARCTRACKER EXISTS  
		//if (`window -ex atui_win`== 1) error ("ArcTracker is already open");
	
	//CHECK IF ARCTRACKER EXISTS (DOCKED)  
		//if (`dockControl -q -ex atDockctrl` == 1) error ("ArcTracker is already open (Docked)");
		if (`dockControl -q -ex atDockctrl` == 1) deleteUI atDockctrl;	
	
	if(`window -ex atui_win`==0)
	{
	window -t $arcTrackerTitle -h 225 -rtf 1 -ret atui_win;
		scrollLayout -h 225 -w 280 atScroll;
		columnLayout -co "both" $uispace -rs $uispace;
			columnLayout;
				
				//OBJECT LIST
					rowColumnLayout -nc 2 -cw 1 225 -cw 2 25;
					button -l "Add Objects" -c "atAddToList";
					button -l "-" -c "atRemoveFromList";
					setParent..;
					button -w $butw -h 5 -l "" -c "if(`textScrollList -q -h atui_list`>10)textScrollList -e -h (`textScrollList -q -h atui_list`-10) atui_list";
					textScrollList -h $objectListSize -bgc 0.365 0.365 0.365 -w $butw -ams 0 atui_list;
					button -w $butw -h 5 -l "" -c "textScrollList -e -h (`textScrollList -q -h atui_list`+10) atui_list";
					rowColumnLayout -nc 2 -cw 1 225 -cw 2 25;
					button -l "Create / Recreate Trail" -c "createTrail";
					button -l "-" -c "atRemoveTrail";
					setParent..;
					
				//ZOOM CTRL
					frameLayout -cl 1 -cll 1 -w $butw -fn "plainLabelFont" -mh 5 -l "Zoom [ Active Camera ]" -bs "etchedOut";
					columnLayout -w $butw;
					rowColumnLayout -nc 6 -cw 1 40 -cw 2 40 -cw 3 40 -cw 4 40 -cw 5 40 -cw 6 40;
					button -l "-" -c "floatSliderGrp -e -v (`floatSliderGrp -q -v atui_zoom`-0.01) atui_zoom;atZoom;";
					button -l "<" -c "floatSliderGrp -e -v (`floatSliderGrp -q -v atui_zoomh`-0.01) atui_zoomh;atZoomH;";
					button -l "v" -c "floatSliderGrp -e -v (`floatSliderGrp -q -v atui_zoomv`-0.01) atui_zoomv;atZoomV;";
					button -l "^" -c "floatSliderGrp -e -v (`floatSliderGrp -q -v atui_zoomv`+0.01) atui_zoomv;atZoomV;";
					button -l ">" -c "floatSliderGrp -e -v (`floatSliderGrp -q -v atui_zoomh`+0.01) atui_zoomh;atZoomH;";
					button -l "+" -c "floatSliderGrp -e -v (`floatSliderGrp -q -v atui_zoom`+0.01) atui_zoom;atZoom;";
					setParent..;
					floatSliderGrp -w $butw -el "Z" -f 0 -v 0 -min 0 -max .9999 -s 0.001 -cw3 80 50 50 -cc "atZoom" atui_zoom;
					floatSliderGrp -w $butw -el "V" -f 0 -v 0 -min -1 -max 1 -s 0.001 -cw3 80 50 50 -cc "atZoomV" atui_zoomv;
					floatSliderGrp -w $butw -el "H" -f 0 -v 0 -min -1 -max 1 -s 0.001 -cw3 80 50 50 -cc "atZoomH" atui_zoomh;
					button -w 240 -l "Reset" -c "atZoomReset" atui_zoomreset;
					setParent ..;
					setParent..;
			
				//TIME
					frameLayout -cl 1 -cll 1 -w $butw -fn "plainLabelFont" -mh 5 -l "Time" -bs "etchedOut";
					columnLayout -w $butw;
					checkBox -w $butw -l "Override Slider Range" -v 0 -align "left" -cc "atEnableTimeOverride" userrange;
					checkBox -w $butw -l "Update Trail When Changed" -en 0 -v 1 -align "left" -cc "atEnableTimeOverride" userupdaterange;
					rowColumnLayout -nc 4 -cal 2 "center" -cw 1 ($butw*.35) -cw 2 ($butw*.1) -cw 3 ($butw*.35) -cw 4 ($butw*.1);
					intField -v $startanim -en 0 -cc "atTimeChange" atui_min;
					button -l "<" -c "intField -e -v (`currentTime -q`) atui_min; atTimeChange" addstarttbut;
					intField -v $endanim -en 0 -cc "atTimeChange" atui_max;
					button -l "<" -c "intField -e -v (`currentTime -q`) atui_max; atTimeChange" addendtbut;
					setParent..;
					setParent..;
					setParent..;
			
				//DISPLAY
					frameLayout -cl 1 -cll 1 -w $butw -fn "plainLabelFont" -mh 5 -l "Display" -bs "etchedOut";
					columnLayout -w $butw;
					checkBox -w $butw -l "Path" -v 1 -en 0 -align "left" -cc "atHide" atui_path;
					colorIndexSliderGrp -w $butw -min 1 -max 31 -v 16 -cc "atCol" atui_pathcol;
					checkBox -w $butw -l "Keyframes" -v 1 -align "left" -cc "atHide" atui_mt01;
					checkBox -w $butw -l "Keyframe Numbers" -v 0 -align "left" -cc "atmtNumbers" atui_keyframenumbers;
					colorIndexSliderGrp -w $butw -min 1 -max 31 -v 17 -cc "atCol" atui_keycol;
					checkBox -w $butw -l "Frames" -v 1 -align "left" -cc "atHide" atui_mt02;
					checkBox -w $butw -l "Frame Numbers" -v 0 -align "left" -cc "atmtNumbers" atui_framenumbers;
					colorIndexSliderGrp -w $butw -min 1 -max 31 -v 19 -cc "atCol" atui_trackcol;
					floatSliderGrp -w $butw -f 1 -pre 2 -min 0.1 -max 5.00 -v $defaultTrackScale -cc "atScale" atui_trackscale;
					floatSliderGrp -w $butw -f 1 -pre 3 -min 1 -max 5 -v 1 -cc "atmtThick" atui_thick;
					setParent..;
					setParent..;
				
				//OPTIONS
					frameLayout -cl 1 -cll 1 -w $butw -fn "plainLabelFont" -mh 5 -l "Options" -bs "etchedOut";
					columnLayout -w $butw;
					checkBox -w $butw -l "Lock Trail" -v 0 -align "left" -cc "atLock" atui_lock;
					checkBox -w $butw -l "Xray Draw" -v 1 -align "left" -cc "atmtXrayDraw" atui_xraydraw;
					rowColumnLayout -nc 2 -cw 1 80 -cw 2 150;
					floatField -pre 3 -en 1 -v 0.000 -cc "atmtPre" atui_pre;
					text -al "left" -l " Pre Frame" atui_pretx;
					floatField -pre 3 -en 1 -v 0.000 -cc "atmtPost" atui_post;
					text -al "left" -l " Post Frame" atui_posttx;
					setParent..;
					floatSliderGrp -w $butw -f 1 -pre 3 -min 0.25 -max 1 -v 1 -cc "atmtInc" atui_inc;
					separator -st "none" -h 10;
					rowColumnLayout -nc 2 -cw 1 110 -cw 2 130 ;
					checkBox -w $butw -l "Thorough Trails" -en 1 -v 0 -align "left" -cc "atThorough" atui_thorough;
					optionMenu -w 130 -h 25 -l "" -en 0 atTrackTypeOpMenu;	menuItem -l "Curves"; menuItem -l "Nurbs";
					setParent..;
					rowColumnLayout -nc 5 -cw 1 85 -cw 2 5 -cw 3 20 -cw 4 130 -cw 5 10;
					checkBox -l "Attach To" -en 0 -v 0 -align "left" ata2c;
					text -l "";
					button -l ">" -en 1 -c "atAddCam" addcambut;
					textField -en 1 -tx "Moving Camera" atui_attachCam;
					text -l "";	
					setParent..;
					setParent..;
					setParent..;
					setParent..;
					
					//DOCK & REMOVE BUTTONS
						rowColumnLayout -nc 3 -cw 1 ($butw*0.333) -cw 2 ($butw*0.333) -cw 3 ($butw*0.333);
						button -h ($buth-8) -l "Dock" -c "atDock" atui_dock;
						button -h ($buth-8) -l "Toggle Curves" -c "toggleCurves" atui_togcurvs;
						button -h ($buth-8) -l "Remove All" -c "atRemoveAll" atui_remall;
						setParent..;
					text -align "center" -l "Pro version available \n www.spence-animator.co.uk" -w $butw;
	
		setParent..;
	showWindow atui_win;
	}
	else{showWindow atui_win;}
	print $credit;
}

global proc createTrail (){
	//VARIABLES
		global string $attrackname;
		global string $atHelpername;
		global string $animpathname;
		global string $atmtKeysName;
		global string $atmtFramesName;
		string $listAllSelected[] = `ls -sl`;
		string $listedObj[] = `textScrollList -q -si atui_list`;
		float $trackScale = `floatSliderGrp -q -v atui_trackscale`;
		int $currentFrame = `currentTime -q`;
		string $usercamera = `textField -q -tx atui_attachCam`;
		float $startanim;
		float $endanim;
		int $i;
		string $s;

	//OBJECT SELECTED CHECK
		if(`size($listedObj)`<1){error "No objects selected in ArcTracker list box";}
		
	//SELECTED OBJECT IN LIST STILL EXISTS - THE DAVE VASQUE CHECK
		if(!`objExists $listedObj[0]`){error "Object selected in ArcTracker list box does not exist";}
	
	//TIME RANGE		
		if(`checkBox -q -v userrange`==0){$startanim = `playbackOptions -q -min`; $endanim = `playbackOptions -q -max`;}
		else if(`intField -q -v atui_min` >= `intField -q -v atui_max`){error "End frame has to be greater than the start frame";}
		else{$startanim = `intField -q -v atui_min`; $endanim = `intField -q -v atui_max`;}
	
	//MOTIONTRAILS
		if(`checkBox -q -v atui_thorough`==0){

		atRemoveTrail();
		
		string $Helper[] = `spaceLocator -n ($listedObj[0]+"_"+$atHelpername)`;
		hide $Helper[0];
		string $atpointcon[] = `pointConstraint -w 1 $listedObj[0] $Helper[0]`;
		selectKey -k $Helper[0];
		for ($i = $startanim; $i <= $endanim; $i++){
		setKeyframe -t $i $Helper[0];
		if(`objExists ($Helper[0]+".blendPoint1")`){
			setAttr ($Helper[0]+".blendPoint1") 1;
			setKeyframe -t $i $Helper[0];
		}
		}				
		
		select -r $Helper[0];
		string $ATCONNECTIONS[] = `listConnections $listedObj[0]`;
		string $ATCON;
		for ($ATCON in $ATCONNECTIONS){
		if (!`objExists ("*"+$atmtFramesName+"*")`==1){string $ATFramesMotionTrail[] = `snapshot -n $atmtFramesName -motionTrail 1 -increment 1 -startTime $startanim -endTime $endanim`; break;}
		else if ((`objExists ("*"+$atmtFramesName+"*")`==1)&&(!`gmatch $ATCON ("*"+$atmtFramesName+"*")`)){delete ("*"+$atmtFramesName+"*"); string $ATFramesMotionTrail[] = `snapshot -n $atmtFramesName -motionTrail 1 -increment 1 -startTime $startanim -endTime $endanim`; break;}
		else {print ("Dont worry "+$atmtFramesName+" already exists");}
		}
		
		select -r $listedObj[0];
		string $ATCONNECTIONS[] = `listConnections $listedObj[0]`;
		string $ATCON;
		for ($ATCON in $ATCONNECTIONS){
		if (!`objExists ("*"+$atmtKeysName+"*")`==1){string $ATKeysMotionTrail[] = `snapshot -n $atmtKeysName -motionTrail 1 -increment 1 -startTime $startanim -endTime $endanim`; break;}
		else if ((`objExists ("*"+$atmtKeysName+"*")`==1)&&(!`gmatch $ATCON ("*"+$atmtKeysName+"*")`)){delete ("*"+$atmtKeysName+"*"); string $ATKeysMotionTrail[] = `snapshot -n $atmtKeysName -motionTrail 1 -increment 1 -startTime $startanim -endTime $endanim`; break;}
		else {print ("Dont worry "+$atmtKeysName+" already exists");}
		}
		
		select -r ("*"+$attrackname+"*");
		string $atmtgroup = `group -n ($attrackname+"_Group")`;
		select -cl;
		
		//RUN RELATED COMMANDS
			atmtCol;
			atmtScale;
			atmtLock;
			atmtNumbers;
			atmtXrayDraw;
			atmtInc;
		}

	//THOROUGHTRAILS
		else{
		
		//REMOVE PREVIOUS TRACKS
			atRemoveTrail();
		
		//CREATE HELPER
			string $Helper[] = `spaceLocator -n ($listedObj[0]+"_"+$atHelpername)`;
			hide $Helper[0];
			string $atpointcon[] = `pointConstraint -w 1 $listedObj[0] $Helper[0]`;
			if(`checkBox -q -v atui_thorough`==1){
			bakeResults -sm 1 -sampleBy 1 -time ($startanim+":"+$endanim) -preserveOutsideKeys 1 -sparseAnimCurveBake 0 {$Helper[0]};
			delete $atpointcon[0];
			}

		//LOOP TIME RANGE
			for ($i = $startanim; $i <= $endanim; $i++){
			
			//GET POSITION
				float $gettx = `getAttr -t $i ($Helper[0]+".tx")`;	
				float $getty = `getAttr -t $i ($Helper[0]+".ty")`;
				float $gettz = `getAttr -t $i ($Helper[0]+".tz")`;
				select -cl;
			
			//CREATE MOVE TRACK
				if (`optionMenu -q -v atTrackTypeOpMenu` == "Curves"){
				curve -n ($listedObj[0]+"_"+$attrackname+"_"+$i+"_inbtrack") -d 3 -p 0 0.233527 0 -p 0 0.233527 0 -p 0 0.233527 0.110086 -p 0 0.116764 0.233527 -p 0 0 0.233527 -p 0 0 0.233527 -p 0.116764 0 0.233527 -p 0.233527 0 0.116764 -p 0.233527 0 0 -p 0.233527 0 0 -p 0.233527 0.116764 0 -p 0.110086 0.233527 0 -p 0 0.233527 0 -p 0 0.233527 0 -p 0 0.233527 -0.110086 -p 0 0.116764 -0.233527 -p 0 0 -0.233527 -p 0 0 -0.233527 -p 0.116764 0 -0.233527 -p 0.233527 0 -0.116764 -p 0.233527 0 0 -p 0.233527 0 0 -p 0.233527 -0.116764 0 -p 0.110086 -0.233527 0 -p 0 -0.233527 0 -p 0 -0.233527 0 -p 0 -0.233527 -0.110086 -p 0 -0.116764 -0.233527 -p 0 0 -0.233527 -p 0 0 -0.233527 -p -0.116764 0 -0.233527 -p -0.233527 0 -0.116764 -p -0.233527 0 0 -p -0.233527 0 0 -p -0.233527 -0.116764 0 -p -0.110086 -0.233527 0 -p 0 -0.233527 0 -p 0 -0.233527 0 -p 0 -0.233527 0.110086 -p 0 -0.116764 0.233527 -p 0 0 0.233527 -p 0 0 0.233527 -p -0.116764 0 0.233527 -p -0.233527 0 0.116764 -p -0.233527 0 0 -p -0.233527 0 0 -p -0.233527 0.116764 0 -p -0.110086 0.233527 0 -p 0 0.233527 0 -p 0 0.233527 0 -k 0 -k 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -k 17 -k 18 -k 19 -k 20 -k 21 -k 22 -k 23 -k 24 -k 25 -k 26 -k 27 -k 28 -k 29 -k 30 -k 31 -k 32 -k 33 -k 34 -k 35 -k 36 -k 37 -k 38 -k 39 -k 40 -k 41 -k 42 -k 43 -k 44 -k 45 -k 46 -k 47 -k 47 -k 47;		
				}
				else{
				string $atsphere[] = `sphere -r 0.2 -n ($listedObj[0]+"_"+$attrackname+"_"+$i+"_inbtrack")`;
				string $shape[] = `listRelatives -ad -s $atsphere[0]`;
				rename $shape[0] "pShereShape_1";
				select -r $atsphere[0];
				}
				string $track[] = `ls -sl`;
				move -a $gettx $getty $gettz $track[0];
				setAttr ($track[0]+".overrideEnabled") 1;
				setAttr ($track[0]+".overrideShading") 0;
			
			//ATTACH TO CAMERA
				if(`checkBox -q -v ata2c`==1){currentTime $i; parent $track[0] $usercamera;}
			
			//KEYFRAME OR INBETWEEN CHECK
				int $plus1 = `keyframe -t $i -q -kc ($listedObj[0]+".tx")`;
				int $plus2 = `keyframe -t $i -q -kc ($listedObj[0]+".ty")`;
				int $plus3 = `keyframe -t $i -q -kc ($listedObj[0]+".tz")`;
				int $plus4 = $plus1 + $plus2 + $plus3;
				if($plus4>0){rename $track[0] ($listedObj[0]+"_"+$attrackname+"_"+$i+"_keytrack");}
				}

		//CREATE PATH
			if(`checkBox -q -v ata2c`==1){currentTime $currentFrame;}
			if (`objExists ("*"+$attrackname+"*track*")`==1){select -r ("*"+$attrackname+"*track*");}
			if (`objExists ("*:*"+$attrackname+"*track*")`==1){select -r ("*:*"+$attrackname+"*track*");}
			string $tkarray[] = `ls -sl`;
			$ws = `xform -q -t -ws $tkarray[0]`;
			curve -d 1 -p $ws[0] $ws[1] $ws[2] -n $animpathname;
			for ($s in $tkarray){
			$ws = `xform -q -t -ws $s`;
			curve -os -a -p $ws[0] $ws[1] $ws[2] $animpathname;
			}
			setAttr ($animpathname+".overrideEnabled") 1;
			setAttr ($animpathname+".overrideShading") 0;
		
		//CREATE GROUP
			if (`objExists ("*"+$attrackname+"*")`==1){select -r ("*"+$attrackname+"*");}
			if (`objExists ("*:*"+$attrackname+"*")`==1){select -r ("*:*"+$attrackname+"*");}
			string $atgroup = `group -n ($listedObj[0]+"_"+$attrackname+"_Group")`;
			if(`checkBox -q -v ata2c`==1){$usercamera = `textField -q -tx atui_attachCam`;	parent $atgroup $usercamera;}
		
		//RUN RELATED COMMANDS
			atScale;
			atLock;
			atHide;
		}
		
		if(`size($listAllSelected)`>0){select -r $listAllSelected;}else{select -cl;}
		print ("Created trail for "+$listedObj[0]+"");
}
	
global proc atZoom (){
	string $viewcam = `lookThru -q`;
	float $i = (`floatSliderGrp -q -v atui_zoom`);
	float $b = 1-(linstep (0.001, 1, $i));
	setAttr ($viewcam+".overscan") $b;
	print "\n";
	}

global proc atZoomV (){
	string $viewcam = `lookThru -q`;
	float $i = `floatSliderGrp -q -v atui_zoomv`;
	setAttr ($viewcam+".verticalFilmOffset") $i;
	}

global proc atZoomH (){
	string $viewcam = `lookThru -q`;
	float $i = `floatSliderGrp -q -v atui_zoomh`;
	setAttr ($viewcam+".horizontalFilmOffset") $i;
	}

global proc atZoomReset (){
	string $viewcam = `lookThru -q`;
	setAttr ($viewcam+".overscan") 1;
	setAttr ($viewcam+".horizontalFilmOffset") 0;
	setAttr ($viewcam+".verticalFilmOffset") 0;
	floatSliderGrp -e -v 0.001 atui_zoom;
	floatSliderGrp -e -v 0 atui_zoomv;
	floatSliderGrp -e -v 0 atui_zoomh;
	}

global proc atTimeChange(){
	string $listedObj[] = `textScrollList -q -si atui_list`;
	if(!`size($listedObj)`<1){if(`checkBox -q -v userupdaterange`==1){createTrail;}}
}

global proc atScale (){
	if(`checkBox -q -v atui_thorough`==0){atmtScale;}
	else{
		global string $attrackname;
		global string $atHelpername;
		global string $animpathname;
		string $listedObj[] = `textScrollList -q -si atui_list`;
		float $i = `floatSliderGrp -q -v atui_trackscale`;
		if (`objExists ("*"+$attrackname+"*track*")`==1) scale -a $i $i $i ("*"+$attrackname+"*track*");
		if (`objExists ("*:*"+$attrackname+"*track*")`==1) scale -a $i $i $i ("*:*"+$attrackname+"*track*");
		//TEMP FIX: UI DOESNT UPDATE THE SCALE - ADDED BELOW TO FORCE A REFRESH 
		atCol;
		}
}

global proc atCol (){
	if(`checkBox -q -v atui_thorough`==0){atmtCol;}
	else{
		global string $attrackname;
		global string $atHelpername;
		global string $animpathname;
		string $listAllSelected[] = `ls -sl`;
		string $listedObj[] = `textScrollList -q -si atui_list`;
		int $p = (`colorIndexSliderGrp -q -v atui_pathcol`-1);
		int $i = (`colorIndexSliderGrp -q -v atui_trackcol`-1);	
		int $k = (`colorIndexSliderGrp -q -v atui_keycol`-1);
		if (`objExists ("*"+$animpathname+"*")`==1){
			select -r ("*"+$animpathname+"*");
			string $aboveList[] = `ls -sl`;
			string $obj;
			for ($obj in $aboveList){setAttr ($obj+".overrideColor") $p;}
			}
		if (`objExists ("*:*"+$animpathname+"*")`==1){
			select -r ("*:*"+$animpathname+"*");
			string $aboveList[] = `ls -sl`;
			string $obj;
			for ($obj in $aboveList){setAttr ($obj+".overrideColor") $p;}
			}
		if (`objExists ("*"+$attrackname+"*inbtrack*")`==1){
			select -r ("*"+$attrackname+"*inbtrack*");
			string $aboveList[] = `ls -sl`;
			string $obj;
			for ($obj in $aboveList){setAttr ($obj+".overrideColor") $i;}
			}
			if (`objExists ("*:*"+$attrackname+"*inbtrack*")`==1){
			select -r ("*:*"+$attrackname+"*inbtrack*");
			string $aboveList[] = `ls -sl`;
			string $obj;
			for ($obj in $aboveList){setAttr ($obj+".overrideColor") $i;}
			}
		if (`objExists ("*"+$attrackname+"*keytrack*")`==1){
			select -r ("*"+$attrackname+"*keytrack*");
			string $aboveList[] = `ls -sl`;
			string $obj;
			for ($obj in $aboveList){setAttr ($obj+".overrideColor") $k;}
			}
			if (`objExists ("*:*"+$attrackname+"*keytrack*")`==1){
			select -r ("*:*"+$attrackname+"*keytrack*");
			string $aboveList[] = `ls -sl`;
			string $obj;
			for ($obj in $aboveList){setAttr ($obj+".overrideColor") $k;}
			}
		select -r $listAllSelected;
		}
}

global proc atRemoveTrail (){
	global string $attrackname;
	global string $atHelpername;
	global string $animpathname;
	string $listedObj[] = `textScrollList -q -si atui_list`;
	if (`objExists ("*"+$attrackname+"*")`==1){delete ("*"+$attrackname+"*");}
	if (`objExists ("*:*"+$attrackname+"*")`==1){delete ("*:*"+$attrackname+"*");}
	if (`objExists ("*ATFramesMotionTrail*")`==1) delete "*ATFramesMotionTrail*";
	if (`objExists ("*ATKeysMotionTrail*")`==1) delete "*ATKeysMotionTrail*";
	if (`objExists ("*AT_Helper*")`==1) delete "*AT_Helper*";
	}

global proc atHide (){
	if(`checkBox -q -v atui_thorough`==0){atmtHide;}
	else{
		global string $attrackname;
		global string $atHelpername;
		global string $animpathname;
		string $listAllSelected[] = `ls -sl`;
		string $listedObj[] = `textScrollList -q -si atui_list`;
		if(`checkBox -q -v atui_path`==0){
			if (`objExists ("*"+$animpathname+"*")`==1) hide ("*"+$animpathname+"*");
			if (`objExists ("*:*"+$animpathname+"*")`==1) hide ("*:*"+$animpathname+"*");
			}
		else{
			if (`objExists ("*"+$animpathname+"*")`==1) showHidden ("*"+$animpathname+"*");
			if (`objExists ("*:*"+$animpathname+"*")`==1) showHidden ("*:*"+$animpathname+"*");
			}
		if(`checkBox -q -v atui_mt01`==0){
			if (`objExists ("*"+$attrackname+"*keytrack*")`==1) hide ("*"+$attrackname+"*track*");
			if (`objExists ("*:*"+$attrackname+"*keytrack*")`==1) hide ("*:*"+$attrackname+"*track*");
			}
		else{
			if (`objExists ("*"+$attrackname+"*keytrack*")`==1) showHidden ("*"+$attrackname+"*track*");
			if (`objExists ("*:*"+$attrackname+"*keytrack*")`==1) showHidden ("*:*"+$attrackname+"*track*");
			}
		if(`checkBox -q -v atui_mt02`==0){
			if (`objExists ("*"+$attrackname+"*inbtrack*")`==1) hide ("*"+$attrackname+"*inbtrack*");
			if (`objExists ("*:*"+$attrackname+"*inbtrack*")`==1) hide ("*:*"+$attrackname+"*inbtrack*");
			}
		else{
			if (`objExists ("*"+$attrackname+"*inbtrack*")`==1) showHidden ("*"+$attrackname+"*inbtrack*");
			if (`objExists ("*:*"+$attrackname+"*inbtrack*")`==1) showHidden ("*:*"+$attrackname+"*inbtrack*");
			}
		select -r $listAllSelected;
		}
}

global proc atRemoveAll(){
	global string $attrackname;
	if (`objExists ("*"+$attrackname+"*")`==1){delete ("*"+$attrackname+"*");}
	if (`objExists ("*:*"+$attrackname+"*")`==1){delete ("*:*"+$attrackname+"*");}
	if(`window -q -ex atui_win`== 1){deleteUI atui_win;}
	if (`dockControl -q -ex atDockctrl` == 1){deleteUI atDockctrl;}
}

global proc atRemoveFromList(){
	string $listedObj[] = `textScrollList -q -si atui_list`;
	string $obj;
	for ($obj in $listedObj){
		string $obj2;
		for ($obj2 in $listedObj){if($obj2 == $obj){textScrollList -e -ri $obj2 atui_list;}}
		}
	}

global proc atAddToList (){
	string $listedObj[] = `textScrollList -q -ai atui_list`;
	string $selection[] = `ls -sl`;
	string $temp[];
		if(`size($selection)`<1){error "Nothing selected";}
		else{
			string $obj;
			for ($obj in $selection){
				int $n = stringArrayContains($obj, $listedObj);
				if($n==0){textScrollList -e -append $obj atui_list;}
			}
		}
	textScrollList -e -si $selection[0] atui_list;
	}

global proc atAddCam (){
	string $obj[] = `ls -sl`;
	textField -e -tx $obj[0] atui_attachCam;
}

global proc atDock (){	
	if (`dockControl -ex atDockctrl` == 0){
	string $arcTrackerTitle = `window -q -t atui_win`;
	dockControl -area "left" -content atui_win -l $arcTrackerTitle -allowedArea "left" -allowedArea "right" -w 280 atDockctrl;
	button -e -l "Undock" atui_dock;
	}
	else{
	atRemoveAll;
	arctracker110;
	//if (`dockControl -q -ex atDockctrl` == 1) deleteUI atDockctrl;
	//showWindow atui_win;
	}
}

global proc atEnableTimeOverride(){
	if(`checkBox -q -v userrange`==1){intField -e -en 1 atui_min; intField -e -en 1 atui_max; checkBox -e -en 1 userupdaterange;}
	else{intField -e -en 0 atui_min; intField -e -en 0 atui_max; checkBox -e -en 0 userupdaterange;}
}

global proc atThorough (){
	string $listedObj[] = `textScrollList -q -si atui_list`;
	if(`checkBox -q -v atui_thorough`==1){
		optionMenu -e -en 1 atTrackTypeOpMenu;
		checkBox -e -en 1 ata2c;
		button -e -en 1 addcambut;
		textField -e -en 1 atui_attachCam;
		checkBox -e -en 1 atui_path;
		checkBox -e -en 0  atui_keyframenumbers;
		checkBox -e -en 0  atui_framenumbers;
		checkBox -e -en 1  atui_lock;
		checkBox -e -en 0  atui_xraydraw;
		floatField -e -en 0 atui_pre;
		floatField -e -en 0 atui_post;
		text -e -en 0 atui_pretx;
		text -e -en 0 atui_posttx;
		floatSliderGrp -e -en 0 atui_thick;
		floatSliderGrp -e -en 0 atui_inc;
		}
	else{
		optionMenu -e -en 0 atTrackTypeOpMenu;
		checkBox -e -en 0 ata2c;
		button -e -en 0 addcambut;
		textField -e -en 0 atui_attachCam;
		checkBox -e -en 0 atui_path;
		checkBox -e -en 1  atui_keyframenumbers;
		checkBox -e -en 1  atui_framenumbers;
		checkBox -e -en 1  atui_lock;
		checkBox -e -en 1  atui_xraydraw;
		floatField -e -en 1 atui_pre;
		floatField -e -en 1 atui_post;
		text -e -en 1 atui_pretx;
		text -e -en 1 atui_posttx;
		floatSliderGrp -e -en 1 atui_thick;
		floatSliderGrp -e -en 1 atui_inc;
		}	
}

global proc atLock (){
	global string $attrackname;
	global string $animpathname;
	string $listAllSelected[] = `ls -sl`;
	int $value;
	string $obj;
	if(`checkBox -q -v atui_thorough`==0){atmtLock;}
	else{
		if (`checkBox -q -v atui_lock` == 1){$value = 1;}else{$value = 0;}
		if (`objExists ("*"+$attrackname+"*")`==1){select -r ("*"+$attrackname+"*track*");}
		if (`objExists ("*:*"+$attrackname+"*")`==1){select -r ("*:*"+$attrackname+"*track*");}
		string $aboveList[] = `ls -sl`;
		for ($obj in $aboveList){setAttr ($obj+".overrideDisplayType") $value;}
		if (`objExists ("*"+$attrackname+"*")`==1){select -r ("*"+$animpathname+"*");}
		if (`objExists ("*:*"+$attrackname+"*")`==1){select -r ("*:*"+$animpathname+"*");}
		string $aboveList[] = `ls -sl`;
		for ($obj in $aboveList){setAttr ($obj+".overrideDisplayType") $value;}			
		select -r $listAllSelected;
		}
}

global proc atmtCol (){
	global string $atmtKeysName;
	global string $atmtFramesName;
	if (`objExists ("*"+$atmtKeysName+"*")`==1){
	vector $color[] = {<<0.471, 0.471, 0.471>>, <<0, 0, 0>>, <<0.251, 0.251, 0.251>>, <<0.502, 0.502, 0.502>>, <<0.608, 0, 0.157>>, <<0, 0.16, 0.376>>, <<0, 0, 1>>, <<0, 0.275, 0.098>>, <<0.14902, 0, 0.262745>>, <<0.784314, 0, 0.784314>>, <<0.541176, 0.282353, 0.2>>, <<0.247059, 0.137255, 0.121569>>, <<0.6, 0.14902, 0>>, <<1, 0, 0>>, <<0, 1, 0>>, <<0, 0.254902, 0.6>>, <<1, 1, 1>>, <<1, 1, 0>>, <<0.392157, 0.862745, 1>>, <<0.262745, 1, 0.639216>>, <<1, 0.690196, 0.690196>>, <<0.894118, 0.67451, 0.47451>>, <<1, 1, 0.388235>>, <<0, 0.6, 0.329412>>, <<0.631373, 0.411765, 0.188235>>, <<0.623529, 0.631373, 0.188235>>, <<0.407843, 0.631373, 0.188235>>, <<0.188235, 0.631373, 0.364706>>, <<0.188235, 0.631373, 0.631373>>, <<0.188235, 0.403922, 0.631373>>, <<0.435294, 0.188235, 0.631373>>};
	int $colorInt = (`colorIndexSliderGrp -q -v atui_pathcol`-1); vector $col = $color[$colorInt];
	setAttr ($atmtFramesName+"HandleShape.trailColor") -type double3 ($col.x) ($col.y) ($col.z) ;
	int $colorInt = (`colorIndexSliderGrp -q -v atui_trackcol`-1); vector $col = $color[$colorInt];
	setAttr ($atmtFramesName+"HandleShape.keyframeColor") -type double3 ($col.x) ($col.y) ($col.z) ;
	setAttr ($atmtFramesName+"HandleShape.beadColor") -type double3 1 1 0 ;
	setAttr ($atmtFramesName+"HandleShape.activeKeyframeColor") -type double3 0 1 0 ;
	int $colorInt = (`colorIndexSliderGrp -q -v atui_pathcol`-1); vector $col = $color[$colorInt];
	setAttr ($atmtKeysName+"HandleShape.trailColor") -type double3 ($col.x) ($col.y) ($col.z) ;
	int $colorInt = (`colorIndexSliderGrp -q -v atui_keycol`-1); vector $col = $color[$colorInt];
	setAttr ($atmtKeysName+"HandleShape.keyframeColor") -type double3 ($col.x) ($col.y) ($col.z) ;
	setAttr ($atmtKeysName+"HandleShape.beadColor") -type double3 1 1 0 ;
	setAttr ($atmtKeysName+"HandleShape.activeKeyframeColor") -type double3 0 1 0 ;
	}
}

global proc atmtScale (){
	global string $atmtKeysName;
	global string $atmtFramesName;
	if (`objExists ("*"+$atmtKeysName+"*")`==1){
	float $i = `floatSliderGrp -q -v atui_trackscale`;
	setAttr ($atmtFramesName+"HandleShape.keyframeSize") $i;
	setAttr ($atmtKeysName+"HandleShape.keyframeSize") ($i*1.2);
	}
}

global proc atmtInc (){
	global string $atmtKeysName;
	global string $atmtFramesName;
	if (`objExists ("*"+$atmtKeysName+"*")`==1){
	float $value = `floatSliderGrp -q -v atui_inc`;
	setAttr ($atmtFramesName+".increment") $value;
	setAttr ($atmtKeysName+".increment") $value;
	}
}

global proc atmtXrayDraw (){
	global string $atmtKeysName;
	global string $atmtFramesName;
	if (`objExists ("*"+$atmtKeysName+"*")`==1){
	float $value = `checkBox -q -v atui_xraydraw`;
	setAttr ($atmtFramesName+"HandleShape.xrayDraw") $value;
	setAttr ($atmtKeysName+"HandleShape.xrayDraw") $value;
	}
}

global proc atmtNumbers (){
	global string $atmtKeysName;
	global string $atmtFramesName;
	if (`objExists ("*"+$atmtKeysName+"*")`==1){
	setAttr ($atmtKeysName+"HandleShape.showFrames") `checkBox -q -v atui_keyframenumbers`;
	setAttr ($atmtFramesName+"HandleShape.showFrames") `checkBox -q -v atui_framenumbers`;
	}
}

global proc atmtHide (){
	global string $atmtKeysName;
	global string $atmtFramesName;
	if (`objExists ("*"+$atmtKeysName+"*")`==1){
	if(`checkBox -q -v atui_mt01`==0){hide ($atmtKeysName+"*");}
	else{showHidden ($atmtKeysName+"*");}
	if(`checkBox -q -v atui_mt02`==0){hide ($atmtFramesName+"*");}
	else{showHidden ($atmtFramesName+"*");}
	}
}

global proc atmtLock (){
	global string $atmtKeysName;
	global string $atmtFramesName;
	if (`objExists ("*"+$atmtKeysName+"*")`==1){
	float $value = `checkBox -q -v atui_lock`;
	if (`checkBox -q -v atui_lock`== 1){
		setAttr ($atmtKeysName+"Handle.overrideEnabled") 1;
		setAttr ($atmtKeysName+"Handle.overrideDisplayType") 2;
		}
	else{
		setAttr ($atmtKeysName+"Handle.overrideEnabled") 0;
		setAttr ($atmtKeysName+"Handle.overrideDisplayType") 0;
		}
	setAttr ($atmtFramesName+"Handle.overrideEnabled") 1;
	setAttr ($atmtFramesName+"Handle.overrideDisplayType") 2;
	}
}

global proc atmtPre (){
	global string $atmtKeysName;
	global string $atmtFramesName;
	float $value = `floatField -q -v atui_pre`;
	if (`objExists ("*"+$atmtKeysName+"*")`==1){
		setAttr ($atmtKeysName+"HandleShape.preFrame") $value;
		setAttr ($atmtFramesName+"HandleShape.preFrame") $value;
		}
}

global proc atmtPost (){
	global string $atmtKeysName;
	global string $atmtFramesName;
	float $value = `floatField -q -v atui_post`;
	if (`objExists ("*"+$atmtKeysName+"*")`==1){
		setAttr ($atmtKeysName+"HandleShape.postFrame") $value;
		setAttr ($atmtFramesName+"HandleShape.postFrame") $value;
		}
}

global proc atmtThick (){
	global string $atmtKeysName;
	global string $atmtFramesName;
	float $value = `floatSliderGrp -q -v atui_thick`;
	if (`objExists ("*"+$atmtKeysName+"*")`==1){
		setAttr ($atmtKeysName+"HandleShape.trailThickness") $value;
		setAttr ($atmtFramesName+"HandleShape.trailThickness") $value;
		}
}

global proc toggleCurves(){
	$currentPanel = `getPanel -withFocus`;
	string $panelType = `getPanel -to $currentPanel`;
	if ($panelType == "modelPanel"){
	   modelEditor -e -nurbsCurves ( !`modelEditor -q -nurbsCurves $currentPanel` ) $currentPanel;
		}
}
